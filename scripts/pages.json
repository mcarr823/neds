[{"name":"class MainActivity : ComponentActivity","description":"dev.mcarr.neds.MainActivity","location":"app/dev.mcarr.neds/-main-activity/index.html","searchKeys":["MainActivity","class MainActivity : ComponentActivity","dev.mcarr.neds.MainActivity"]},{"name":"constructor()","description":"dev.mcarr.neds.MainActivity.MainActivity","location":"app/dev.mcarr.neds/-main-activity/-main-activity.html","searchKeys":["MainActivity","constructor()","dev.mcarr.neds.MainActivity.MainActivity"]},{"name":"fun MainActivityScreen()","description":"dev.mcarr.neds.app.screens.MainActivityScreen","location":"app/dev.mcarr.neds.app.screens/-main-activity-screen.html","searchKeys":["MainActivityScreen","fun MainActivityScreen()","dev.mcarr.neds.app.screens.MainActivityScreen"]},{"name":"fun MainActivityScreenNextToGoPreview()","description":"dev.mcarr.neds.app.screens.MainActivityScreenNextToGoPreview","location":"app/dev.mcarr.neds.app.screens/-main-activity-screen-next-to-go-preview.html","searchKeys":["MainActivityScreenNextToGoPreview","fun MainActivityScreenNextToGoPreview()","dev.mcarr.neds.app.screens.MainActivityScreenNextToGoPreview"]},{"name":"object NextToGoDestination","description":"dev.mcarr.neds.app.navigation.NextToGoDestination","location":"app/dev.mcarr.neds.app.navigation/-next-to-go-destination/index.html","searchKeys":["NextToGoDestination","object NextToGoDestination","dev.mcarr.neds.app.navigation.NextToGoDestination"]},{"name":"ALL","description":"dev.mcarr.neds.common.enums.racing.RacingCategory.ALL","location":"common/dev.mcarr.neds.common.enums.racing/-racing-category/-a-l-l/index.html","searchKeys":["ALL","ALL","dev.mcarr.neds.common.enums.racing.RacingCategory.ALL"]},{"name":"GREYHOUND_RACING","description":"dev.mcarr.neds.common.enums.racing.RacingCategory.GREYHOUND_RACING","location":"common/dev.mcarr.neds.common.enums.racing/-racing-category/-g-r-e-y-h-o-u-n-d_-r-a-c-i-n-g/index.html","searchKeys":["GREYHOUND_RACING","GREYHOUND_RACING","dev.mcarr.neds.common.enums.racing.RacingCategory.GREYHOUND_RACING"]},{"name":"HARNESS_RACING","description":"dev.mcarr.neds.common.enums.racing.RacingCategory.HARNESS_RACING","location":"common/dev.mcarr.neds.common.enums.racing/-racing-category/-h-a-r-n-e-s-s_-r-a-c-i-n-g/index.html","searchKeys":["HARNESS_RACING","HARNESS_RACING","dev.mcarr.neds.common.enums.racing.RacingCategory.HARNESS_RACING"]},{"name":"HORSE_RACING","description":"dev.mcarr.neds.common.enums.racing.RacingCategory.HORSE_RACING","location":"common/dev.mcarr.neds.common.enums.racing/-racing-category/-h-o-r-s-e_-r-a-c-i-n-g/index.html","searchKeys":["HORSE_RACING","HORSE_RACING","dev.mcarr.neds.common.enums.racing.RacingCategory.HORSE_RACING"]},{"name":"HTTPS","description":"dev.mcarr.neds.common.enums.http.HttpScheme.HTTPS","location":"common/dev.mcarr.neds.common.enums.http/-http-scheme/-h-t-t-p-s/index.html","searchKeys":["HTTPS","HTTPS","dev.mcarr.neds.common.enums.http.HttpScheme.HTTPS"]},{"name":"NEDS_AU_API","description":"dev.mcarr.neds.common.enums.http.ApiHost.NEDS_AU_API","location":"common/dev.mcarr.neds.common.enums.http/-api-host/-n-e-d-s_-a-u_-a-p-i/index.html","searchKeys":["NEDS_AU_API","NEDS_AU_API","dev.mcarr.neds.common.enums.http.ApiHost.NEDS_AU_API"]},{"name":"NEXT_RACES","description":"dev.mcarr.neds.common.enums.racing.RacingMethod.NEXT_RACES","location":"common/dev.mcarr.neds.common.enums.racing/-racing-method/-n-e-x-t_-r-a-c-e-s/index.html","searchKeys":["NEXT_RACES","NEXT_RACES","dev.mcarr.neds.common.enums.racing.RacingMethod.NEXT_RACES"]},{"name":"RACING","description":"dev.mcarr.neds.common.enums.http.EventType.RACING","location":"common/dev.mcarr.neds.common.enums.http/-event-type/-r-a-c-i-n-g/index.html","searchKeys":["RACING","RACING","dev.mcarr.neds.common.enums.http.EventType.RACING"]},{"name":"REST","description":"dev.mcarr.neds.common.enums.http.ApiType.REST","location":"common/dev.mcarr.neds.common.enums.http/-api-type/-r-e-s-t/index.html","searchKeys":["REST","REST","dev.mcarr.neds.common.enums.http.ApiType.REST"]},{"name":"UNSPECIFIED","description":"dev.mcarr.neds.common.enums.http.EventType.UNSPECIFIED","location":"common/dev.mcarr.neds.common.enums.http/-event-type/-u-n-s-p-e-c-i-f-i-e-d/index.html","searchKeys":["UNSPECIFIED","UNSPECIFIED","dev.mcarr.neds.common.enums.http.EventType.UNSPECIFIED"]},{"name":"UNSPECIFIED","description":"dev.mcarr.neds.common.enums.racing.RacingMethod.UNSPECIFIED","location":"common/dev.mcarr.neds.common.enums.racing/-racing-method/-u-n-s-p-e-c-i-f-i-e-d/index.html","searchKeys":["UNSPECIFIED","UNSPECIFIED","dev.mcarr.neds.common.enums.racing.RacingMethod.UNSPECIFIED"]},{"name":"V1","description":"dev.mcarr.neds.common.enums.http.ApiVersion.V1","location":"common/dev.mcarr.neds.common.enums.http/-api-version/-v1/index.html","searchKeys":["V1","V1","dev.mcarr.neds.common.enums.http.ApiVersion.V1"]},{"name":"abstract fun pause()","description":"dev.mcarr.neds.common.interfaces.viewmodels.INextToGoViewModel.pause","location":"common/dev.mcarr.neds.common.interfaces.viewmodels/-i-next-to-go-view-model/pause.html","searchKeys":["pause","abstract fun pause()","dev.mcarr.neds.common.interfaces.viewmodels.INextToGoViewModel.pause"]},{"name":"abstract fun resetState()","description":"dev.mcarr.neds.common.interfaces.viewmodels.INextToGoViewModel.resetState","location":"common/dev.mcarr.neds.common.interfaces.viewmodels/-i-next-to-go-view-model/reset-state.html","searchKeys":["resetState","abstract fun resetState()","dev.mcarr.neds.common.interfaces.viewmodels.INextToGoViewModel.resetState"]},{"name":"abstract fun setCategory(category: List<RacingCategory>)","description":"dev.mcarr.neds.common.interfaces.viewmodels.INextToGoViewModel.setCategory","location":"common/dev.mcarr.neds.common.interfaces.viewmodels/-i-next-to-go-view-model/set-category.html","searchKeys":["setCategory","abstract fun setCategory(category: List<RacingCategory>)","dev.mcarr.neds.common.interfaces.viewmodels.INextToGoViewModel.setCategory"]},{"name":"abstract suspend fun getNextRace(count: Int): RacingNetworkResponse","description":"dev.mcarr.neds.common.interfaces.data.datasources.IRacingDataSource.getNextRace","location":"common/dev.mcarr.neds.common.interfaces.data.datasources/-i-racing-data-source/get-next-race.html","searchKeys":["getNextRace","abstract suspend fun getNextRace(count: Int): RacingNetworkResponse","dev.mcarr.neds.common.interfaces.data.datasources.IRacingDataSource.getNextRace"]},{"name":"abstract val exactNumberOfResultsToDisplay: Int","description":"dev.mcarr.neds.common.interfaces.viewmodels.INextToGoViewModel.exactNumberOfResultsToDisplay","location":"common/dev.mcarr.neds.common.interfaces.viewmodels/-i-next-to-go-view-model/exact-number-of-results-to-display.html","searchKeys":["exactNumberOfResultsToDisplay","abstract val exactNumberOfResultsToDisplay: Int","dev.mcarr.neds.common.interfaces.viewmodels.INextToGoViewModel.exactNumberOfResultsToDisplay"]},{"name":"abstract val uiState: StateFlow<NextToGoScreenUiState>","description":"dev.mcarr.neds.common.interfaces.viewmodels.INextToGoViewModel.uiState","location":"common/dev.mcarr.neds.common.interfaces.viewmodels/-i-next-to-go-view-model/ui-state.html","searchKeys":["uiState","abstract val uiState: StateFlow<NextToGoScreenUiState>","dev.mcarr.neds.common.interfaces.viewmodels.INextToGoViewModel.uiState"]},{"name":"constructor(category: List<RacingCategory>, loadingState: RacingUseCaseOutcome, races: List<RaceCardData>)","description":"dev.mcarr.neds.common.classes.racing.NextToGoScreenUiState.NextToGoScreenUiState","location":"common/dev.mcarr.neds.common.classes.racing/-next-to-go-screen-ui-state/-next-to-go-screen-ui-state.html","searchKeys":["NextToGoScreenUiState","constructor(category: List<RacingCategory>, loadingState: RacingUseCaseOutcome, races: List<RaceCardData>)","dev.mcarr.neds.common.classes.racing.NextToGoScreenUiState.NextToGoScreenUiState"]},{"name":"constructor(distance: Int, distanceType: DistanceType, distanceTypeId: String, trackCondition: TrackCondition?, trackConditionId: String?, weather: Weather?, weatherId: String?, raceComment: String?, additionalData: String, generated: Int, silkBaseUrl: String, raceCommentAlternative: String?)","description":"dev.mcarr.neds.common.classes.racing.RaceForm.RaceForm","location":"common/dev.mcarr.neds.common.classes.racing/-race-form/-race-form.html","searchKeys":["RaceForm","constructor(distance: Int, distanceType: DistanceType, distanceTypeId: String, trackCondition: TrackCondition?, trackConditionId: String?, weather: Weather?, weatherId: String?, raceComment: String?, additionalData: String, generated: Int, silkBaseUrl: String, raceCommentAlternative: String?)","dev.mcarr.neds.common.classes.racing.RaceForm.RaceForm"]},{"name":"constructor(e: Throwable)","description":"dev.mcarr.neds.common.sealed.racing.RacingNetworkRequestOutcome.Failure.Failure","location":"common/dev.mcarr.neds.common.sealed.racing/-racing-network-request-outcome/-failure/-failure.html","searchKeys":["Failure","constructor(e: Throwable)","dev.mcarr.neds.common.sealed.racing.RacingNetworkRequestOutcome.Failure.Failure"]},{"name":"constructor(e: Throwable)","description":"dev.mcarr.neds.common.sealed.racing.RacingUseCaseOutcome.Failure.Failure","location":"common/dev.mcarr.neds.common.sealed.racing/-racing-use-case-outcome/-failure/-failure.html","searchKeys":["Failure","constructor(e: Throwable)","dev.mcarr.neds.common.sealed.racing.RacingUseCaseOutcome.Failure.Failure"]},{"name":"constructor(finished: Boolean = true)","description":"dev.mcarr.neds.common.sealed.racing.RacingUseCaseOutcome.Success.Success","location":"common/dev.mcarr.neds.common.sealed.racing/-racing-use-case-outcome/-success/-success.html","searchKeys":["Success","constructor(finished: Boolean = true)","dev.mcarr.neds.common.sealed.racing.RacingUseCaseOutcome.Success.Success"]},{"name":"constructor(id: String, name: String, shortName: String)","description":"dev.mcarr.neds.common.classes.common.DistanceType.DistanceType","location":"common/dev.mcarr.neds.common.classes.common/-distance-type/-distance-type.html","searchKeys":["DistanceType","constructor(id: String, name: String, shortName: String)","dev.mcarr.neds.common.classes.common.DistanceType.DistanceType"]},{"name":"constructor(id: String, name: String, shortName: String)","description":"dev.mcarr.neds.common.classes.common.TrackCondition.TrackCondition","location":"common/dev.mcarr.neds.common.classes.common/-track-condition/-track-condition.html","searchKeys":["TrackCondition","constructor(id: String, name: String, shortName: String)","dev.mcarr.neds.common.classes.common.TrackCondition.TrackCondition"]},{"name":"constructor(id: String, name: String, shortName: String, iconUri: String)","description":"dev.mcarr.neds.common.classes.common.Weather.Weather","location":"common/dev.mcarr.neds.common.classes.common/-weather/-weather.html","searchKeys":["Weather","constructor(id: String, name: String, shortName: String, iconUri: String)","dev.mcarr.neds.common.classes.common.Weather.Weather"]},{"name":"constructor(inProgress: Boolean = true)","description":"dev.mcarr.neds.common.sealed.racing.RacingNetworkRequestOutcome.Progress.Progress","location":"common/dev.mcarr.neds.common.sealed.racing/-racing-network-request-outcome/-progress/-progress.html","searchKeys":["Progress","constructor(inProgress: Boolean = true)","dev.mcarr.neds.common.sealed.racing.RacingNetworkRequestOutcome.Progress.Progress"]},{"name":"constructor(inProgress: Boolean = true)","description":"dev.mcarr.neds.common.sealed.racing.RacingUseCaseOutcome.Progress.Progress","location":"common/dev.mcarr.neds.common.sealed.racing/-racing-use-case-outcome/-progress/-progress.html","searchKeys":["Progress","constructor(inProgress: Boolean = true)","dev.mcarr.neds.common.sealed.racing.RacingUseCaseOutcome.Progress.Progress"]},{"name":"constructor(nextToGoIds: List<String>, raceSummaries: Map<String, RaceSummary>)","description":"dev.mcarr.neds.common.classes.racing.RacingNetworkResponseData.RacingNetworkResponseData","location":"common/dev.mcarr.neds.common.classes.racing/-racing-network-response-data/-racing-network-response-data.html","searchKeys":["RacingNetworkResponseData","constructor(nextToGoIds: List<String>, raceSummaries: Map<String, RaceSummary>)","dev.mcarr.neds.common.classes.racing.RacingNetworkResponseData.RacingNetworkResponseData"]},{"name":"constructor(raceId: String, raceName: String, raceNumber: Int, meetingId: String, meetingName: String, categoryId: String, advertisedStart: RaceAdvertisedStart, raceForm: RaceForm, venueId: String, venueName: String, venueState: String, venueCountry: String)","description":"dev.mcarr.neds.common.classes.racing.RaceSummary.RaceSummary","location":"common/dev.mcarr.neds.common.classes.racing/-race-summary/-race-summary.html","searchKeys":["RaceSummary","constructor(raceId: String, raceName: String, raceNumber: Int, meetingId: String, meetingName: String, categoryId: String, advertisedStart: RaceAdvertisedStart, raceForm: RaceForm, venueId: String, venueName: String, venueState: String, venueCountry: String)","dev.mcarr.neds.common.classes.racing.RaceSummary.RaceSummary"]},{"name":"constructor(raceId: String, raceNumber: String, startsIn: String, meetingName: String)","description":"dev.mcarr.neds.common.classes.racing.RaceCardData.RaceCardData","location":"common/dev.mcarr.neds.common.classes.racing/-race-card-data/-race-card-data.html","searchKeys":["RaceCardData","constructor(raceId: String, raceNumber: String, startsIn: String, meetingName: String)","dev.mcarr.neds.common.classes.racing.RaceCardData.RaceCardData"]},{"name":"constructor(response: RacingNetworkResponse)","description":"dev.mcarr.neds.common.sealed.racing.RacingNetworkRequestOutcome.Success.Success","location":"common/dev.mcarr.neds.common.sealed.racing/-racing-network-request-outcome/-success/-success.html","searchKeys":["Success","constructor(response: RacingNetworkResponse)","dev.mcarr.neds.common.sealed.racing.RacingNetworkRequestOutcome.Success.Success"]},{"name":"constructor(seconds: Long)","description":"dev.mcarr.neds.common.classes.racing.RaceAdvertisedStart.RaceAdvertisedStart","location":"common/dev.mcarr.neds.common.classes.racing/-race-advertised-start/-race-advertised-start.html","searchKeys":["RaceAdvertisedStart","constructor(seconds: Long)","dev.mcarr.neds.common.classes.racing.RaceAdvertisedStart.RaceAdvertisedStart"]},{"name":"constructor(status: Int, data: RacingNetworkResponseData, message: String)","description":"dev.mcarr.neds.common.classes.racing.RacingNetworkResponse.RacingNetworkResponse","location":"common/dev.mcarr.neds.common.classes.racing/-racing-network-response/-racing-network-response.html","searchKeys":["RacingNetworkResponse","constructor(status: Int, data: RacingNetworkResponseData, message: String)","dev.mcarr.neds.common.classes.racing.RacingNetworkResponse.RacingNetworkResponse"]},{"name":"data class DistanceType(val id: String, val name: String, val shortName: String)","description":"dev.mcarr.neds.common.classes.common.DistanceType","location":"common/dev.mcarr.neds.common.classes.common/-distance-type/index.html","searchKeys":["DistanceType","data class DistanceType(val id: String, val name: String, val shortName: String)","dev.mcarr.neds.common.classes.common.DistanceType"]},{"name":"data class Failure(val e: Throwable) : RacingNetworkRequestOutcome<RacingNetworkResponse> ","description":"dev.mcarr.neds.common.sealed.racing.RacingNetworkRequestOutcome.Failure","location":"common/dev.mcarr.neds.common.sealed.racing/-racing-network-request-outcome/-failure/index.html","searchKeys":["Failure","data class Failure(val e: Throwable) : RacingNetworkRequestOutcome<RacingNetworkResponse> ","dev.mcarr.neds.common.sealed.racing.RacingNetworkRequestOutcome.Failure"]},{"name":"data class Failure(val e: Throwable) : RacingUseCaseOutcome","description":"dev.mcarr.neds.common.sealed.racing.RacingUseCaseOutcome.Failure","location":"common/dev.mcarr.neds.common.sealed.racing/-racing-use-case-outcome/-failure/index.html","searchKeys":["Failure","data class Failure(val e: Throwable) : RacingUseCaseOutcome","dev.mcarr.neds.common.sealed.racing.RacingUseCaseOutcome.Failure"]},{"name":"data class NextToGoScreenUiState(val category: List<RacingCategory>, val loadingState: RacingUseCaseOutcome, val races: List<RaceCardData>)","description":"dev.mcarr.neds.common.classes.racing.NextToGoScreenUiState","location":"common/dev.mcarr.neds.common.classes.racing/-next-to-go-screen-ui-state/index.html","searchKeys":["NextToGoScreenUiState","data class NextToGoScreenUiState(val category: List<RacingCategory>, val loadingState: RacingUseCaseOutcome, val races: List<RaceCardData>)","dev.mcarr.neds.common.classes.racing.NextToGoScreenUiState"]},{"name":"data class Progress(val inProgress: Boolean = true) : RacingNetworkRequestOutcome<RacingNetworkResponse> ","description":"dev.mcarr.neds.common.sealed.racing.RacingNetworkRequestOutcome.Progress","location":"common/dev.mcarr.neds.common.sealed.racing/-racing-network-request-outcome/-progress/index.html","searchKeys":["Progress","data class Progress(val inProgress: Boolean = true) : RacingNetworkRequestOutcome<RacingNetworkResponse> ","dev.mcarr.neds.common.sealed.racing.RacingNetworkRequestOutcome.Progress"]},{"name":"data class Progress(val inProgress: Boolean = true) : RacingUseCaseOutcome","description":"dev.mcarr.neds.common.sealed.racing.RacingUseCaseOutcome.Progress","location":"common/dev.mcarr.neds.common.sealed.racing/-racing-use-case-outcome/-progress/index.html","searchKeys":["Progress","data class Progress(val inProgress: Boolean = true) : RacingUseCaseOutcome","dev.mcarr.neds.common.sealed.racing.RacingUseCaseOutcome.Progress"]},{"name":"data class RaceAdvertisedStart(val seconds: Long)","description":"dev.mcarr.neds.common.classes.racing.RaceAdvertisedStart","location":"common/dev.mcarr.neds.common.classes.racing/-race-advertised-start/index.html","searchKeys":["RaceAdvertisedStart","data class RaceAdvertisedStart(val seconds: Long)","dev.mcarr.neds.common.classes.racing.RaceAdvertisedStart"]},{"name":"data class RaceCardData(val raceId: String, val raceNumber: String, val startsIn: String, val meetingName: String)","description":"dev.mcarr.neds.common.classes.racing.RaceCardData","location":"common/dev.mcarr.neds.common.classes.racing/-race-card-data/index.html","searchKeys":["RaceCardData","data class RaceCardData(val raceId: String, val raceNumber: String, val startsIn: String, val meetingName: String)","dev.mcarr.neds.common.classes.racing.RaceCardData"]},{"name":"data class RaceForm(val distance: Int, val distanceType: DistanceType, val distanceTypeId: String, val trackCondition: TrackCondition?, val trackConditionId: String?, val weather: Weather?, val weatherId: String?, val raceComment: String?, val additionalData: String, val generated: Int, val silkBaseUrl: String, val raceCommentAlternative: String?)","description":"dev.mcarr.neds.common.classes.racing.RaceForm","location":"common/dev.mcarr.neds.common.classes.racing/-race-form/index.html","searchKeys":["RaceForm","data class RaceForm(val distance: Int, val distanceType: DistanceType, val distanceTypeId: String, val trackCondition: TrackCondition?, val trackConditionId: String?, val weather: Weather?, val weatherId: String?, val raceComment: String?, val additionalData: String, val generated: Int, val silkBaseUrl: String, val raceCommentAlternative: String?)","dev.mcarr.neds.common.classes.racing.RaceForm"]},{"name":"data class RaceSummary(val raceId: String, val raceName: String, val raceNumber: Int, val meetingId: String, val meetingName: String, val categoryId: String, val advertisedStart: RaceAdvertisedStart, val raceForm: RaceForm, val venueId: String, val venueName: String, val venueState: String, val venueCountry: String)","description":"dev.mcarr.neds.common.classes.racing.RaceSummary","location":"common/dev.mcarr.neds.common.classes.racing/-race-summary/index.html","searchKeys":["RaceSummary","data class RaceSummary(val raceId: String, val raceName: String, val raceNumber: Int, val meetingId: String, val meetingName: String, val categoryId: String, val advertisedStart: RaceAdvertisedStart, val raceForm: RaceForm, val venueId: String, val venueName: String, val venueState: String, val venueCountry: String)","dev.mcarr.neds.common.classes.racing.RaceSummary"]},{"name":"data class RacingNetworkResponse(val status: Int, val data: RacingNetworkResponseData, val message: String)","description":"dev.mcarr.neds.common.classes.racing.RacingNetworkResponse","location":"common/dev.mcarr.neds.common.classes.racing/-racing-network-response/index.html","searchKeys":["RacingNetworkResponse","data class RacingNetworkResponse(val status: Int, val data: RacingNetworkResponseData, val message: String)","dev.mcarr.neds.common.classes.racing.RacingNetworkResponse"]},{"name":"data class RacingNetworkResponseData(val nextToGoIds: List<String>, val raceSummaries: Map<String, RaceSummary>)","description":"dev.mcarr.neds.common.classes.racing.RacingNetworkResponseData","location":"common/dev.mcarr.neds.common.classes.racing/-racing-network-response-data/index.html","searchKeys":["RacingNetworkResponseData","data class RacingNetworkResponseData(val nextToGoIds: List<String>, val raceSummaries: Map<String, RaceSummary>)","dev.mcarr.neds.common.classes.racing.RacingNetworkResponseData"]},{"name":"data class Success(val finished: Boolean = true) : RacingUseCaseOutcome","description":"dev.mcarr.neds.common.sealed.racing.RacingUseCaseOutcome.Success","location":"common/dev.mcarr.neds.common.sealed.racing/-racing-use-case-outcome/-success/index.html","searchKeys":["Success","data class Success(val finished: Boolean = true) : RacingUseCaseOutcome","dev.mcarr.neds.common.sealed.racing.RacingUseCaseOutcome.Success"]},{"name":"data class Success(val response: RacingNetworkResponse) : RacingNetworkRequestOutcome<RacingNetworkResponse> ","description":"dev.mcarr.neds.common.sealed.racing.RacingNetworkRequestOutcome.Success","location":"common/dev.mcarr.neds.common.sealed.racing/-racing-network-request-outcome/-success/index.html","searchKeys":["Success","data class Success(val response: RacingNetworkResponse) : RacingNetworkRequestOutcome<RacingNetworkResponse> ","dev.mcarr.neds.common.sealed.racing.RacingNetworkRequestOutcome.Success"]},{"name":"data class TrackCondition(val id: String, val name: String, val shortName: String)","description":"dev.mcarr.neds.common.classes.common.TrackCondition","location":"common/dev.mcarr.neds.common.classes.common/-track-condition/index.html","searchKeys":["TrackCondition","data class TrackCondition(val id: String, val name: String, val shortName: String)","dev.mcarr.neds.common.classes.common.TrackCondition"]},{"name":"data class Weather(val id: String, val name: String, val shortName: String, val iconUri: String)","description":"dev.mcarr.neds.common.classes.common.Weather","location":"common/dev.mcarr.neds.common.classes.common/-weather/index.html","searchKeys":["Weather","data class Weather(val id: String, val name: String, val shortName: String, val iconUri: String)","dev.mcarr.neds.common.classes.common.Weather"]},{"name":"enum ApiHost : Enum<ApiHost> ","description":"dev.mcarr.neds.common.enums.http.ApiHost","location":"common/dev.mcarr.neds.common.enums.http/-api-host/index.html","searchKeys":["ApiHost","enum ApiHost : Enum<ApiHost> ","dev.mcarr.neds.common.enums.http.ApiHost"]},{"name":"enum ApiType : Enum<ApiType> ","description":"dev.mcarr.neds.common.enums.http.ApiType","location":"common/dev.mcarr.neds.common.enums.http/-api-type/index.html","searchKeys":["ApiType","enum ApiType : Enum<ApiType> ","dev.mcarr.neds.common.enums.http.ApiType"]},{"name":"enum ApiVersion : Enum<ApiVersion> ","description":"dev.mcarr.neds.common.enums.http.ApiVersion","location":"common/dev.mcarr.neds.common.enums.http/-api-version/index.html","searchKeys":["ApiVersion","enum ApiVersion : Enum<ApiVersion> ","dev.mcarr.neds.common.enums.http.ApiVersion"]},{"name":"enum EventType : Enum<EventType> ","description":"dev.mcarr.neds.common.enums.http.EventType","location":"common/dev.mcarr.neds.common.enums.http/-event-type/index.html","searchKeys":["EventType","enum EventType : Enum<EventType> ","dev.mcarr.neds.common.enums.http.EventType"]},{"name":"enum HttpScheme : Enum<HttpScheme> ","description":"dev.mcarr.neds.common.enums.http.HttpScheme","location":"common/dev.mcarr.neds.common.enums.http/-http-scheme/index.html","searchKeys":["HttpScheme","enum HttpScheme : Enum<HttpScheme> ","dev.mcarr.neds.common.enums.http.HttpScheme"]},{"name":"enum RacingCategory : Enum<RacingCategory> ","description":"dev.mcarr.neds.common.enums.racing.RacingCategory","location":"common/dev.mcarr.neds.common.enums.racing/-racing-category/index.html","searchKeys":["RacingCategory","enum RacingCategory : Enum<RacingCategory> ","dev.mcarr.neds.common.enums.racing.RacingCategory"]},{"name":"enum RacingMethod : Enum<RacingMethod> ","description":"dev.mcarr.neds.common.enums.racing.RacingMethod","location":"common/dev.mcarr.neds.common.enums.racing/-racing-method/index.html","searchKeys":["RacingMethod","enum RacingMethod : Enum<RacingMethod> ","dev.mcarr.neds.common.enums.racing.RacingMethod"]},{"name":"fun getRaceNumberDisplayText(): String","description":"dev.mcarr.neds.common.classes.racing.RaceSummary.getRaceNumberDisplayText","location":"common/dev.mcarr.neds.common.classes.racing/-race-summary/get-race-number-display-text.html","searchKeys":["getRaceNumberDisplayText","fun getRaceNumberDisplayText(): String","dev.mcarr.neds.common.classes.racing.RaceSummary.getRaceNumberDisplayText"]},{"name":"fun getRaceSummaries(): List<RaceSummary>","description":"dev.mcarr.neds.common.classes.racing.RacingNetworkResponse.getRaceSummaries","location":"common/dev.mcarr.neds.common.classes.racing/-racing-network-response/get-race-summaries.html","searchKeys":["getRaceSummaries","fun getRaceSummaries(): List<RaceSummary>","dev.mcarr.neds.common.classes.racing.RacingNetworkResponse.getRaceSummaries"]},{"name":"fun hasExpired(): Boolean","description":"dev.mcarr.neds.common.classes.racing.RaceSummary.hasExpired","location":"common/dev.mcarr.neds.common.classes.racing/-race-summary/has-expired.html","searchKeys":["hasExpired","fun hasExpired(): Boolean","dev.mcarr.neds.common.classes.racing.RaceSummary.hasExpired"]},{"name":"fun startsInDisplayText(): String","description":"dev.mcarr.neds.common.classes.racing.RaceSummary.startsInDisplayText","location":"common/dev.mcarr.neds.common.classes.racing/-race-summary/starts-in-display-text.html","searchKeys":["startsInDisplayText","fun startsInDisplayText(): String","dev.mcarr.neds.common.classes.racing.RaceSummary.startsInDisplayText"]},{"name":"fun startsInSeconds(): Long","description":"dev.mcarr.neds.common.classes.racing.RaceSummary.startsInSeconds","location":"common/dev.mcarr.neds.common.classes.racing/-race-summary/starts-in-seconds.html","searchKeys":["startsInSeconds","fun startsInSeconds(): Long","dev.mcarr.neds.common.classes.racing.RaceSummary.startsInSeconds"]},{"name":"fun toRaceCardData(): RaceCardData","description":"dev.mcarr.neds.common.classes.racing.RaceSummary.toRaceCardData","location":"common/dev.mcarr.neds.common.classes.racing/-race-summary/to-race-card-data.html","searchKeys":["toRaceCardData","fun toRaceCardData(): RaceCardData","dev.mcarr.neds.common.classes.racing.RaceSummary.toRaceCardData"]},{"name":"fun valueOf(value: String): ApiHost","description":"dev.mcarr.neds.common.enums.http.ApiHost.valueOf","location":"common/dev.mcarr.neds.common.enums.http/-api-host/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ApiHost","dev.mcarr.neds.common.enums.http.ApiHost.valueOf"]},{"name":"fun valueOf(value: String): ApiType","description":"dev.mcarr.neds.common.enums.http.ApiType.valueOf","location":"common/dev.mcarr.neds.common.enums.http/-api-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ApiType","dev.mcarr.neds.common.enums.http.ApiType.valueOf"]},{"name":"fun valueOf(value: String): ApiVersion","description":"dev.mcarr.neds.common.enums.http.ApiVersion.valueOf","location":"common/dev.mcarr.neds.common.enums.http/-api-version/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ApiVersion","dev.mcarr.neds.common.enums.http.ApiVersion.valueOf"]},{"name":"fun valueOf(value: String): EventType","description":"dev.mcarr.neds.common.enums.http.EventType.valueOf","location":"common/dev.mcarr.neds.common.enums.http/-event-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): EventType","dev.mcarr.neds.common.enums.http.EventType.valueOf"]},{"name":"fun valueOf(value: String): HttpScheme","description":"dev.mcarr.neds.common.enums.http.HttpScheme.valueOf","location":"common/dev.mcarr.neds.common.enums.http/-http-scheme/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): HttpScheme","dev.mcarr.neds.common.enums.http.HttpScheme.valueOf"]},{"name":"fun valueOf(value: String): RacingCategory","description":"dev.mcarr.neds.common.enums.racing.RacingCategory.valueOf","location":"common/dev.mcarr.neds.common.enums.racing/-racing-category/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): RacingCategory","dev.mcarr.neds.common.enums.racing.RacingCategory.valueOf"]},{"name":"fun valueOf(value: String): RacingMethod","description":"dev.mcarr.neds.common.enums.racing.RacingMethod.valueOf","location":"common/dev.mcarr.neds.common.enums.racing/-racing-method/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): RacingMethod","dev.mcarr.neds.common.enums.racing.RacingMethod.valueOf"]},{"name":"fun values(): Array<ApiHost>","description":"dev.mcarr.neds.common.enums.http.ApiHost.values","location":"common/dev.mcarr.neds.common.enums.http/-api-host/values.html","searchKeys":["values","fun values(): Array<ApiHost>","dev.mcarr.neds.common.enums.http.ApiHost.values"]},{"name":"fun values(): Array<ApiType>","description":"dev.mcarr.neds.common.enums.http.ApiType.values","location":"common/dev.mcarr.neds.common.enums.http/-api-type/values.html","searchKeys":["values","fun values(): Array<ApiType>","dev.mcarr.neds.common.enums.http.ApiType.values"]},{"name":"fun values(): Array<ApiVersion>","description":"dev.mcarr.neds.common.enums.http.ApiVersion.values","location":"common/dev.mcarr.neds.common.enums.http/-api-version/values.html","searchKeys":["values","fun values(): Array<ApiVersion>","dev.mcarr.neds.common.enums.http.ApiVersion.values"]},{"name":"fun values(): Array<EventType>","description":"dev.mcarr.neds.common.enums.http.EventType.values","location":"common/dev.mcarr.neds.common.enums.http/-event-type/values.html","searchKeys":["values","fun values(): Array<EventType>","dev.mcarr.neds.common.enums.http.EventType.values"]},{"name":"fun values(): Array<HttpScheme>","description":"dev.mcarr.neds.common.enums.http.HttpScheme.values","location":"common/dev.mcarr.neds.common.enums.http/-http-scheme/values.html","searchKeys":["values","fun values(): Array<HttpScheme>","dev.mcarr.neds.common.enums.http.HttpScheme.values"]},{"name":"fun values(): Array<RacingCategory>","description":"dev.mcarr.neds.common.enums.racing.RacingCategory.values","location":"common/dev.mcarr.neds.common.enums.racing/-racing-category/values.html","searchKeys":["values","fun values(): Array<RacingCategory>","dev.mcarr.neds.common.enums.racing.RacingCategory.values"]},{"name":"fun values(): Array<RacingMethod>","description":"dev.mcarr.neds.common.enums.racing.RacingMethod.values","location":"common/dev.mcarr.neds.common.enums.racing/-racing-method/values.html","searchKeys":["values","fun values(): Array<RacingMethod>","dev.mcarr.neds.common.enums.racing.RacingMethod.values"]},{"name":"interface INextToGoViewModel","description":"dev.mcarr.neds.common.interfaces.viewmodels.INextToGoViewModel","location":"common/dev.mcarr.neds.common.interfaces.viewmodels/-i-next-to-go-view-model/index.html","searchKeys":["INextToGoViewModel","interface INextToGoViewModel","dev.mcarr.neds.common.interfaces.viewmodels.INextToGoViewModel"]},{"name":"interface IRacingDataSource","description":"dev.mcarr.neds.common.interfaces.data.datasources.IRacingDataSource","location":"common/dev.mcarr.neds.common.interfaces.data.datasources/-i-racing-data-source/index.html","searchKeys":["IRacingDataSource","interface IRacingDataSource","dev.mcarr.neds.common.interfaces.data.datasources.IRacingDataSource"]},{"name":"sealed class RacingNetworkRequestOutcome<RacingNetworkResponse>","description":"dev.mcarr.neds.common.sealed.racing.RacingNetworkRequestOutcome","location":"common/dev.mcarr.neds.common.sealed.racing/-racing-network-request-outcome/index.html","searchKeys":["RacingNetworkRequestOutcome","sealed class RacingNetworkRequestOutcome<RacingNetworkResponse>","dev.mcarr.neds.common.sealed.racing.RacingNetworkRequestOutcome"]},{"name":"sealed class RacingUseCaseOutcome","description":"dev.mcarr.neds.common.sealed.racing.RacingUseCaseOutcome","location":"common/dev.mcarr.neds.common.sealed.racing/-racing-use-case-outcome/index.html","searchKeys":["RacingUseCaseOutcome","sealed class RacingUseCaseOutcome","dev.mcarr.neds.common.sealed.racing.RacingUseCaseOutcome"]},{"name":"val additionalData: String","description":"dev.mcarr.neds.common.classes.racing.RaceForm.additionalData","location":"common/dev.mcarr.neds.common.classes.racing/-race-form/additional-data.html","searchKeys":["additionalData","val additionalData: String","dev.mcarr.neds.common.classes.racing.RaceForm.additionalData"]},{"name":"val advertisedStart: RaceAdvertisedStart","description":"dev.mcarr.neds.common.classes.racing.RaceSummary.advertisedStart","location":"common/dev.mcarr.neds.common.classes.racing/-race-summary/advertised-start.html","searchKeys":["advertisedStart","val advertisedStart: RaceAdvertisedStart","dev.mcarr.neds.common.classes.racing.RaceSummary.advertisedStart"]},{"name":"val category: List<RacingCategory>","description":"dev.mcarr.neds.common.classes.racing.NextToGoScreenUiState.category","location":"common/dev.mcarr.neds.common.classes.racing/-next-to-go-screen-ui-state/category.html","searchKeys":["category","val category: List<RacingCategory>","dev.mcarr.neds.common.classes.racing.NextToGoScreenUiState.category"]},{"name":"val categoryId: String","description":"dev.mcarr.neds.common.classes.racing.RaceSummary.categoryId","location":"common/dev.mcarr.neds.common.classes.racing/-race-summary/category-id.html","searchKeys":["categoryId","val categoryId: String","dev.mcarr.neds.common.classes.racing.RaceSummary.categoryId"]},{"name":"val data: RacingNetworkResponseData","description":"dev.mcarr.neds.common.classes.racing.RacingNetworkResponse.data","location":"common/dev.mcarr.neds.common.classes.racing/-racing-network-response/data.html","searchKeys":["data","val data: RacingNetworkResponseData","dev.mcarr.neds.common.classes.racing.RacingNetworkResponse.data"]},{"name":"val distance: Int","description":"dev.mcarr.neds.common.classes.racing.RaceForm.distance","location":"common/dev.mcarr.neds.common.classes.racing/-race-form/distance.html","searchKeys":["distance","val distance: Int","dev.mcarr.neds.common.classes.racing.RaceForm.distance"]},{"name":"val distanceType: DistanceType","description":"dev.mcarr.neds.common.classes.racing.RaceForm.distanceType","location":"common/dev.mcarr.neds.common.classes.racing/-race-form/distance-type.html","searchKeys":["distanceType","val distanceType: DistanceType","dev.mcarr.neds.common.classes.racing.RaceForm.distanceType"]},{"name":"val distanceTypeId: String","description":"dev.mcarr.neds.common.classes.racing.RaceForm.distanceTypeId","location":"common/dev.mcarr.neds.common.classes.racing/-race-form/distance-type-id.html","searchKeys":["distanceTypeId","val distanceTypeId: String","dev.mcarr.neds.common.classes.racing.RaceForm.distanceTypeId"]},{"name":"val e: Throwable","description":"dev.mcarr.neds.common.sealed.racing.RacingNetworkRequestOutcome.Failure.e","location":"common/dev.mcarr.neds.common.sealed.racing/-racing-network-request-outcome/-failure/e.html","searchKeys":["e","val e: Throwable","dev.mcarr.neds.common.sealed.racing.RacingNetworkRequestOutcome.Failure.e"]},{"name":"val e: Throwable","description":"dev.mcarr.neds.common.sealed.racing.RacingUseCaseOutcome.Failure.e","location":"common/dev.mcarr.neds.common.sealed.racing/-racing-use-case-outcome/-failure/e.html","searchKeys":["e","val e: Throwable","dev.mcarr.neds.common.sealed.racing.RacingUseCaseOutcome.Failure.e"]},{"name":"val entries: EnumEntries<ApiHost>","description":"dev.mcarr.neds.common.enums.http.ApiHost.entries","location":"common/dev.mcarr.neds.common.enums.http/-api-host/entries.html","searchKeys":["entries","val entries: EnumEntries<ApiHost>","dev.mcarr.neds.common.enums.http.ApiHost.entries"]},{"name":"val entries: EnumEntries<ApiType>","description":"dev.mcarr.neds.common.enums.http.ApiType.entries","location":"common/dev.mcarr.neds.common.enums.http/-api-type/entries.html","searchKeys":["entries","val entries: EnumEntries<ApiType>","dev.mcarr.neds.common.enums.http.ApiType.entries"]},{"name":"val entries: EnumEntries<ApiVersion>","description":"dev.mcarr.neds.common.enums.http.ApiVersion.entries","location":"common/dev.mcarr.neds.common.enums.http/-api-version/entries.html","searchKeys":["entries","val entries: EnumEntries<ApiVersion>","dev.mcarr.neds.common.enums.http.ApiVersion.entries"]},{"name":"val entries: EnumEntries<EventType>","description":"dev.mcarr.neds.common.enums.http.EventType.entries","location":"common/dev.mcarr.neds.common.enums.http/-event-type/entries.html","searchKeys":["entries","val entries: EnumEntries<EventType>","dev.mcarr.neds.common.enums.http.EventType.entries"]},{"name":"val entries: EnumEntries<HttpScheme>","description":"dev.mcarr.neds.common.enums.http.HttpScheme.entries","location":"common/dev.mcarr.neds.common.enums.http/-http-scheme/entries.html","searchKeys":["entries","val entries: EnumEntries<HttpScheme>","dev.mcarr.neds.common.enums.http.HttpScheme.entries"]},{"name":"val entries: EnumEntries<RacingCategory>","description":"dev.mcarr.neds.common.enums.racing.RacingCategory.entries","location":"common/dev.mcarr.neds.common.enums.racing/-racing-category/entries.html","searchKeys":["entries","val entries: EnumEntries<RacingCategory>","dev.mcarr.neds.common.enums.racing.RacingCategory.entries"]},{"name":"val entries: EnumEntries<RacingMethod>","description":"dev.mcarr.neds.common.enums.racing.RacingMethod.entries","location":"common/dev.mcarr.neds.common.enums.racing/-racing-method/entries.html","searchKeys":["entries","val entries: EnumEntries<RacingMethod>","dev.mcarr.neds.common.enums.racing.RacingMethod.entries"]},{"name":"val finished: Boolean = true","description":"dev.mcarr.neds.common.sealed.racing.RacingUseCaseOutcome.Success.finished","location":"common/dev.mcarr.neds.common.sealed.racing/-racing-use-case-outcome/-success/finished.html","searchKeys":["finished","val finished: Boolean = true","dev.mcarr.neds.common.sealed.racing.RacingUseCaseOutcome.Success.finished"]},{"name":"val generated: Int","description":"dev.mcarr.neds.common.classes.racing.RaceForm.generated","location":"common/dev.mcarr.neds.common.classes.racing/-race-form/generated.html","searchKeys":["generated","val generated: Int","dev.mcarr.neds.common.classes.racing.RaceForm.generated"]},{"name":"val iconUri: String","description":"dev.mcarr.neds.common.classes.common.Weather.iconUri","location":"common/dev.mcarr.neds.common.classes.common/-weather/icon-uri.html","searchKeys":["iconUri","val iconUri: String","dev.mcarr.neds.common.classes.common.Weather.iconUri"]},{"name":"val id: String","description":"dev.mcarr.neds.common.classes.common.DistanceType.id","location":"common/dev.mcarr.neds.common.classes.common/-distance-type/id.html","searchKeys":["id","val id: String","dev.mcarr.neds.common.classes.common.DistanceType.id"]},{"name":"val id: String","description":"dev.mcarr.neds.common.classes.common.TrackCondition.id","location":"common/dev.mcarr.neds.common.classes.common/-track-condition/id.html","searchKeys":["id","val id: String","dev.mcarr.neds.common.classes.common.TrackCondition.id"]},{"name":"val id: String","description":"dev.mcarr.neds.common.classes.common.Weather.id","location":"common/dev.mcarr.neds.common.classes.common/-weather/id.html","searchKeys":["id","val id: String","dev.mcarr.neds.common.classes.common.Weather.id"]},{"name":"val inProgress: Boolean = true","description":"dev.mcarr.neds.common.sealed.racing.RacingNetworkRequestOutcome.Progress.inProgress","location":"common/dev.mcarr.neds.common.sealed.racing/-racing-network-request-outcome/-progress/in-progress.html","searchKeys":["inProgress","val inProgress: Boolean = true","dev.mcarr.neds.common.sealed.racing.RacingNetworkRequestOutcome.Progress.inProgress"]},{"name":"val inProgress: Boolean = true","description":"dev.mcarr.neds.common.sealed.racing.RacingUseCaseOutcome.Progress.inProgress","location":"common/dev.mcarr.neds.common.sealed.racing/-racing-use-case-outcome/-progress/in-progress.html","searchKeys":["inProgress","val inProgress: Boolean = true","dev.mcarr.neds.common.sealed.racing.RacingUseCaseOutcome.Progress.inProgress"]},{"name":"val loadingState: RacingUseCaseOutcome","description":"dev.mcarr.neds.common.classes.racing.NextToGoScreenUiState.loadingState","location":"common/dev.mcarr.neds.common.classes.racing/-next-to-go-screen-ui-state/loading-state.html","searchKeys":["loadingState","val loadingState: RacingUseCaseOutcome","dev.mcarr.neds.common.classes.racing.NextToGoScreenUiState.loadingState"]},{"name":"val meetingId: String","description":"dev.mcarr.neds.common.classes.racing.RaceSummary.meetingId","location":"common/dev.mcarr.neds.common.classes.racing/-race-summary/meeting-id.html","searchKeys":["meetingId","val meetingId: String","dev.mcarr.neds.common.classes.racing.RaceSummary.meetingId"]},{"name":"val meetingName: String","description":"dev.mcarr.neds.common.classes.racing.RaceCardData.meetingName","location":"common/dev.mcarr.neds.common.classes.racing/-race-card-data/meeting-name.html","searchKeys":["meetingName","val meetingName: String","dev.mcarr.neds.common.classes.racing.RaceCardData.meetingName"]},{"name":"val meetingName: String","description":"dev.mcarr.neds.common.classes.racing.RaceSummary.meetingName","location":"common/dev.mcarr.neds.common.classes.racing/-race-summary/meeting-name.html","searchKeys":["meetingName","val meetingName: String","dev.mcarr.neds.common.classes.racing.RaceSummary.meetingName"]},{"name":"val message: String","description":"dev.mcarr.neds.common.classes.racing.RacingNetworkResponse.message","location":"common/dev.mcarr.neds.common.classes.racing/-racing-network-response/message.html","searchKeys":["message","val message: String","dev.mcarr.neds.common.classes.racing.RacingNetworkResponse.message"]},{"name":"val name: String","description":"dev.mcarr.neds.common.classes.common.DistanceType.name","location":"common/dev.mcarr.neds.common.classes.common/-distance-type/name.html","searchKeys":["name","val name: String","dev.mcarr.neds.common.classes.common.DistanceType.name"]},{"name":"val name: String","description":"dev.mcarr.neds.common.classes.common.TrackCondition.name","location":"common/dev.mcarr.neds.common.classes.common/-track-condition/name.html","searchKeys":["name","val name: String","dev.mcarr.neds.common.classes.common.TrackCondition.name"]},{"name":"val name: String","description":"dev.mcarr.neds.common.classes.common.Weather.name","location":"common/dev.mcarr.neds.common.classes.common/-weather/name.html","searchKeys":["name","val name: String","dev.mcarr.neds.common.classes.common.Weather.name"]},{"name":"val nextToGoIds: List<String>","description":"dev.mcarr.neds.common.classes.racing.RacingNetworkResponseData.nextToGoIds","location":"common/dev.mcarr.neds.common.classes.racing/-racing-network-response-data/next-to-go-ids.html","searchKeys":["nextToGoIds","val nextToGoIds: List<String>","dev.mcarr.neds.common.classes.racing.RacingNetworkResponseData.nextToGoIds"]},{"name":"val raceComment: String?","description":"dev.mcarr.neds.common.classes.racing.RaceForm.raceComment","location":"common/dev.mcarr.neds.common.classes.racing/-race-form/race-comment.html","searchKeys":["raceComment","val raceComment: String?","dev.mcarr.neds.common.classes.racing.RaceForm.raceComment"]},{"name":"val raceCommentAlternative: String?","description":"dev.mcarr.neds.common.classes.racing.RaceForm.raceCommentAlternative","location":"common/dev.mcarr.neds.common.classes.racing/-race-form/race-comment-alternative.html","searchKeys":["raceCommentAlternative","val raceCommentAlternative: String?","dev.mcarr.neds.common.classes.racing.RaceForm.raceCommentAlternative"]},{"name":"val raceForm: RaceForm","description":"dev.mcarr.neds.common.classes.racing.RaceSummary.raceForm","location":"common/dev.mcarr.neds.common.classes.racing/-race-summary/race-form.html","searchKeys":["raceForm","val raceForm: RaceForm","dev.mcarr.neds.common.classes.racing.RaceSummary.raceForm"]},{"name":"val raceId: String","description":"dev.mcarr.neds.common.classes.racing.RaceCardData.raceId","location":"common/dev.mcarr.neds.common.classes.racing/-race-card-data/race-id.html","searchKeys":["raceId","val raceId: String","dev.mcarr.neds.common.classes.racing.RaceCardData.raceId"]},{"name":"val raceId: String","description":"dev.mcarr.neds.common.classes.racing.RaceSummary.raceId","location":"common/dev.mcarr.neds.common.classes.racing/-race-summary/race-id.html","searchKeys":["raceId","val raceId: String","dev.mcarr.neds.common.classes.racing.RaceSummary.raceId"]},{"name":"val raceName: String","description":"dev.mcarr.neds.common.classes.racing.RaceSummary.raceName","location":"common/dev.mcarr.neds.common.classes.racing/-race-summary/race-name.html","searchKeys":["raceName","val raceName: String","dev.mcarr.neds.common.classes.racing.RaceSummary.raceName"]},{"name":"val raceNumber: Int","description":"dev.mcarr.neds.common.classes.racing.RaceSummary.raceNumber","location":"common/dev.mcarr.neds.common.classes.racing/-race-summary/race-number.html","searchKeys":["raceNumber","val raceNumber: Int","dev.mcarr.neds.common.classes.racing.RaceSummary.raceNumber"]},{"name":"val raceNumber: String","description":"dev.mcarr.neds.common.classes.racing.RaceCardData.raceNumber","location":"common/dev.mcarr.neds.common.classes.racing/-race-card-data/race-number.html","searchKeys":["raceNumber","val raceNumber: String","dev.mcarr.neds.common.classes.racing.RaceCardData.raceNumber"]},{"name":"val raceSummaries: Map<String, RaceSummary>","description":"dev.mcarr.neds.common.classes.racing.RacingNetworkResponseData.raceSummaries","location":"common/dev.mcarr.neds.common.classes.racing/-racing-network-response-data/race-summaries.html","searchKeys":["raceSummaries","val raceSummaries: Map<String, RaceSummary>","dev.mcarr.neds.common.classes.racing.RacingNetworkResponseData.raceSummaries"]},{"name":"val races: List<RaceCardData>","description":"dev.mcarr.neds.common.classes.racing.NextToGoScreenUiState.races","location":"common/dev.mcarr.neds.common.classes.racing/-next-to-go-screen-ui-state/races.html","searchKeys":["races","val races: List<RaceCardData>","dev.mcarr.neds.common.classes.racing.NextToGoScreenUiState.races"]},{"name":"val response: RacingNetworkResponse","description":"dev.mcarr.neds.common.sealed.racing.RacingNetworkRequestOutcome.Success.response","location":"common/dev.mcarr.neds.common.sealed.racing/-racing-network-request-outcome/-success/response.html","searchKeys":["response","val response: RacingNetworkResponse","dev.mcarr.neds.common.sealed.racing.RacingNetworkRequestOutcome.Success.response"]},{"name":"val seconds: Long","description":"dev.mcarr.neds.common.classes.racing.RaceAdvertisedStart.seconds","location":"common/dev.mcarr.neds.common.classes.racing/-race-advertised-start/seconds.html","searchKeys":["seconds","val seconds: Long","dev.mcarr.neds.common.classes.racing.RaceAdvertisedStart.seconds"]},{"name":"val shortName: String","description":"dev.mcarr.neds.common.classes.common.DistanceType.shortName","location":"common/dev.mcarr.neds.common.classes.common/-distance-type/short-name.html","searchKeys":["shortName","val shortName: String","dev.mcarr.neds.common.classes.common.DistanceType.shortName"]},{"name":"val shortName: String","description":"dev.mcarr.neds.common.classes.common.TrackCondition.shortName","location":"common/dev.mcarr.neds.common.classes.common/-track-condition/short-name.html","searchKeys":["shortName","val shortName: String","dev.mcarr.neds.common.classes.common.TrackCondition.shortName"]},{"name":"val shortName: String","description":"dev.mcarr.neds.common.classes.common.Weather.shortName","location":"common/dev.mcarr.neds.common.classes.common/-weather/short-name.html","searchKeys":["shortName","val shortName: String","dev.mcarr.neds.common.classes.common.Weather.shortName"]},{"name":"val silkBaseUrl: String","description":"dev.mcarr.neds.common.classes.racing.RaceForm.silkBaseUrl","location":"common/dev.mcarr.neds.common.classes.racing/-race-form/silk-base-url.html","searchKeys":["silkBaseUrl","val silkBaseUrl: String","dev.mcarr.neds.common.classes.racing.RaceForm.silkBaseUrl"]},{"name":"val startsIn: String","description":"dev.mcarr.neds.common.classes.racing.RaceCardData.startsIn","location":"common/dev.mcarr.neds.common.classes.racing/-race-card-data/starts-in.html","searchKeys":["startsIn","val startsIn: String","dev.mcarr.neds.common.classes.racing.RaceCardData.startsIn"]},{"name":"val status: Int","description":"dev.mcarr.neds.common.classes.racing.RacingNetworkResponse.status","location":"common/dev.mcarr.neds.common.classes.racing/-racing-network-response/status.html","searchKeys":["status","val status: Int","dev.mcarr.neds.common.classes.racing.RacingNetworkResponse.status"]},{"name":"val trackCondition: TrackCondition?","description":"dev.mcarr.neds.common.classes.racing.RaceForm.trackCondition","location":"common/dev.mcarr.neds.common.classes.racing/-race-form/track-condition.html","searchKeys":["trackCondition","val trackCondition: TrackCondition?","dev.mcarr.neds.common.classes.racing.RaceForm.trackCondition"]},{"name":"val trackConditionId: String?","description":"dev.mcarr.neds.common.classes.racing.RaceForm.trackConditionId","location":"common/dev.mcarr.neds.common.classes.racing/-race-form/track-condition-id.html","searchKeys":["trackConditionId","val trackConditionId: String?","dev.mcarr.neds.common.classes.racing.RaceForm.trackConditionId"]},{"name":"val uuid: String","description":"dev.mcarr.neds.common.enums.racing.RacingCategory.uuid","location":"common/dev.mcarr.neds.common.enums.racing/-racing-category/uuid.html","searchKeys":["uuid","val uuid: String","dev.mcarr.neds.common.enums.racing.RacingCategory.uuid"]},{"name":"val value: String","description":"dev.mcarr.neds.common.enums.http.ApiHost.value","location":"common/dev.mcarr.neds.common.enums.http/-api-host/value.html","searchKeys":["value","val value: String","dev.mcarr.neds.common.enums.http.ApiHost.value"]},{"name":"val value: String","description":"dev.mcarr.neds.common.enums.http.ApiType.value","location":"common/dev.mcarr.neds.common.enums.http/-api-type/value.html","searchKeys":["value","val value: String","dev.mcarr.neds.common.enums.http.ApiType.value"]},{"name":"val value: String","description":"dev.mcarr.neds.common.enums.http.ApiVersion.value","location":"common/dev.mcarr.neds.common.enums.http/-api-version/value.html","searchKeys":["value","val value: String","dev.mcarr.neds.common.enums.http.ApiVersion.value"]},{"name":"val value: String","description":"dev.mcarr.neds.common.enums.http.EventType.value","location":"common/dev.mcarr.neds.common.enums.http/-event-type/value.html","searchKeys":["value","val value: String","dev.mcarr.neds.common.enums.http.EventType.value"]},{"name":"val value: String","description":"dev.mcarr.neds.common.enums.http.HttpScheme.value","location":"common/dev.mcarr.neds.common.enums.http/-http-scheme/value.html","searchKeys":["value","val value: String","dev.mcarr.neds.common.enums.http.HttpScheme.value"]},{"name":"val value: String","description":"dev.mcarr.neds.common.enums.racing.RacingMethod.value","location":"common/dev.mcarr.neds.common.enums.racing/-racing-method/value.html","searchKeys":["value","val value: String","dev.mcarr.neds.common.enums.racing.RacingMethod.value"]},{"name":"val venueCountry: String","description":"dev.mcarr.neds.common.classes.racing.RaceSummary.venueCountry","location":"common/dev.mcarr.neds.common.classes.racing/-race-summary/venue-country.html","searchKeys":["venueCountry","val venueCountry: String","dev.mcarr.neds.common.classes.racing.RaceSummary.venueCountry"]},{"name":"val venueId: String","description":"dev.mcarr.neds.common.classes.racing.RaceSummary.venueId","location":"common/dev.mcarr.neds.common.classes.racing/-race-summary/venue-id.html","searchKeys":["venueId","val venueId: String","dev.mcarr.neds.common.classes.racing.RaceSummary.venueId"]},{"name":"val venueName: String","description":"dev.mcarr.neds.common.classes.racing.RaceSummary.venueName","location":"common/dev.mcarr.neds.common.classes.racing/-race-summary/venue-name.html","searchKeys":["venueName","val venueName: String","dev.mcarr.neds.common.classes.racing.RaceSummary.venueName"]},{"name":"val venueState: String","description":"dev.mcarr.neds.common.classes.racing.RaceSummary.venueState","location":"common/dev.mcarr.neds.common.classes.racing/-race-summary/venue-state.html","searchKeys":["venueState","val venueState: String","dev.mcarr.neds.common.classes.racing.RaceSummary.venueState"]},{"name":"val weather: Weather?","description":"dev.mcarr.neds.common.classes.racing.RaceForm.weather","location":"common/dev.mcarr.neds.common.classes.racing/-race-form/weather.html","searchKeys":["weather","val weather: Weather?","dev.mcarr.neds.common.classes.racing.RaceForm.weather"]},{"name":"val weatherId: String?","description":"dev.mcarr.neds.common.classes.racing.RaceForm.weatherId","location":"common/dev.mcarr.neds.common.classes.racing/-race-form/weather-id.html","searchKeys":["weatherId","val weatherId: String?","dev.mcarr.neds.common.classes.racing.RaceForm.weatherId"]},{"name":"class RacingDataSource : IRacingDataSource","description":"dev.mcarr.neds.data.datasources.RacingDataSource","location":"data/dev.mcarr.neds.data.datasources/-racing-data-source/index.html","searchKeys":["RacingDataSource","class RacingDataSource : IRacingDataSource","dev.mcarr.neds.data.datasources.RacingDataSource"]},{"name":"class RacingRepository(racingDataSource: IRacingDataSource)","description":"dev.mcarr.neds.data.repositories.RacingRepository","location":"data/dev.mcarr.neds.data.repositories/-racing-repository/index.html","searchKeys":["RacingRepository","class RacingRepository(racingDataSource: IRacingDataSource)","dev.mcarr.neds.data.repositories.RacingRepository"]},{"name":"constructor()","description":"dev.mcarr.neds.data.datasources.RacingDataSource.RacingDataSource","location":"data/dev.mcarr.neds.data.datasources/-racing-data-source/-racing-data-source.html","searchKeys":["RacingDataSource","constructor()","dev.mcarr.neds.data.datasources.RacingDataSource.RacingDataSource"]},{"name":"constructor(racingDataSource: IRacingDataSource)","description":"dev.mcarr.neds.data.repositories.RacingRepository.RacingRepository","location":"data/dev.mcarr.neds.data.repositories/-racing-repository/-racing-repository.html","searchKeys":["RacingRepository","constructor(racingDataSource: IRacingDataSource)","dev.mcarr.neds.data.repositories.RacingRepository.RacingRepository"]},{"name":"open suspend override fun getNextRace(count: Int): RacingNetworkResponse","description":"dev.mcarr.neds.data.datasources.RacingDataSource.getNextRace","location":"data/dev.mcarr.neds.data.datasources/-racing-data-source/get-next-race.html","searchKeys":["getNextRace","open suspend override fun getNextRace(count: Int): RacingNetworkResponse","dev.mcarr.neds.data.datasources.RacingDataSource.getNextRace"]},{"name":"suspend fun getNextRace(count: Int)","description":"dev.mcarr.neds.data.repositories.RacingRepository.getNextRace","location":"data/dev.mcarr.neds.data.repositories/-racing-repository/get-next-race.html","searchKeys":["getNextRace","suspend fun getNextRace(count: Int)","dev.mcarr.neds.data.repositories.RacingRepository.getNextRace"]},{"name":"val nextRaces: MutableStateFlow<RacingNetworkRequestOutcome<RacingNetworkResponse>>","description":"dev.mcarr.neds.data.repositories.RacingRepository.nextRaces","location":"data/dev.mcarr.neds.data.repositories/-racing-repository/next-races.html","searchKeys":["nextRaces","val nextRaces: MutableStateFlow<RacingNetworkRequestOutcome<RacingNetworkResponse>>","dev.mcarr.neds.data.repositories.RacingRepository.nextRaces"]},{"name":"class NextToGoViewModel : ViewModel, INextToGoViewModel","description":"dev.mcarr.neds.ui.viewmodels.NextToGoViewModel","location":"ui/dev.mcarr.neds.ui.viewmodels/-next-to-go-view-model/index.html","searchKeys":["NextToGoViewModel","class NextToGoViewModel : ViewModel, INextToGoViewModel","dev.mcarr.neds.ui.viewmodels.NextToGoViewModel"]},{"name":"constructor()","description":"dev.mcarr.neds.ui.viewmodels.NextToGoViewModel.NextToGoViewModel","location":"ui/dev.mcarr.neds.ui.viewmodels/-next-to-go-view-model/-next-to-go-view-model.html","searchKeys":["NextToGoViewModel","constructor()","dev.mcarr.neds.ui.viewmodels.NextToGoViewModel.NextToGoViewModel"]},{"name":"fun <T> FilterButtonListMulti(choices: List<Pair<String, T>>, currentChoices: List<T>, selectChoices: (List<T>) -> Unit)","description":"dev.mcarr.neds.ui.components.base.FilterButtonListMulti","location":"ui/dev.mcarr.neds.ui.components.base/-filter-button-list-multi.html","searchKeys":["FilterButtonListMulti","fun <T> FilterButtonListMulti(choices: List<Pair<String, T>>, currentChoices: List<T>, selectChoices: (List<T>) -> Unit)","dev.mcarr.neds.ui.components.base.FilterButtonListMulti"]},{"name":"fun <T> FilterButtonListSingle(choices: List<Pair<String, T>>, currentChoice: T, selectChoice: (T) -> Unit)","description":"dev.mcarr.neds.ui.components.base.FilterButtonListSingle","location":"ui/dev.mcarr.neds.ui.components.base/-filter-button-list-single.html","searchKeys":["FilterButtonListSingle","fun <T> FilterButtonListSingle(choices: List<Pair<String, T>>, currentChoice: T, selectChoice: (T) -> Unit)","dev.mcarr.neds.ui.components.base.FilterButtonListSingle"]},{"name":"fun NedsTheme(darkTheme: Boolean = isSystemInDarkTheme(), dynamicColor: Boolean = true, content: () -> Unit)","description":"dev.mcarr.neds.ui.theme.NedsTheme","location":"ui/dev.mcarr.neds.ui.theme/-neds-theme.html","searchKeys":["NedsTheme","fun NedsTheme(darkTheme: Boolean = isSystemInDarkTheme(), dynamicColor: Boolean = true, content: () -> Unit)","dev.mcarr.neds.ui.theme.NedsTheme"]},{"name":"fun NextToGoScreen(model: INextToGoViewModel)","description":"dev.mcarr.neds.ui.screens.NextToGoScreen","location":"ui/dev.mcarr.neds.ui.screens/-next-to-go-screen.html","searchKeys":["NextToGoScreen","fun NextToGoScreen(model: INextToGoViewModel)","dev.mcarr.neds.ui.screens.NextToGoScreen"]},{"name":"fun PreviewFilterButtonListMulti()","description":"dev.mcarr.neds.ui.components.base.PreviewFilterButtonListMulti","location":"ui/dev.mcarr.neds.ui.components.base/-preview-filter-button-list-multi.html","searchKeys":["PreviewFilterButtonListMulti","fun PreviewFilterButtonListMulti()","dev.mcarr.neds.ui.components.base.PreviewFilterButtonListMulti"]},{"name":"fun PreviewFilterButtonListMultiDark()","description":"dev.mcarr.neds.ui.components.base.PreviewFilterButtonListMultiDark","location":"ui/dev.mcarr.neds.ui.components.base/-preview-filter-button-list-multi-dark.html","searchKeys":["PreviewFilterButtonListMultiDark","fun PreviewFilterButtonListMultiDark()","dev.mcarr.neds.ui.components.base.PreviewFilterButtonListMultiDark"]},{"name":"fun PreviewFilterButtonListMultiLargeFont()","description":"dev.mcarr.neds.ui.components.base.PreviewFilterButtonListMultiLargeFont","location":"ui/dev.mcarr.neds.ui.components.base/-preview-filter-button-list-multi-large-font.html","searchKeys":["PreviewFilterButtonListMultiLargeFont","fun PreviewFilterButtonListMultiLargeFont()","dev.mcarr.neds.ui.components.base.PreviewFilterButtonListMultiLargeFont"]},{"name":"fun PreviewFilterButtonListSingle()","description":"dev.mcarr.neds.ui.components.base.PreviewFilterButtonListSingle","location":"ui/dev.mcarr.neds.ui.components.base/-preview-filter-button-list-single.html","searchKeys":["PreviewFilterButtonListSingle","fun PreviewFilterButtonListSingle()","dev.mcarr.neds.ui.components.base.PreviewFilterButtonListSingle"]},{"name":"fun PreviewFilterButtonListSingleDark()","description":"dev.mcarr.neds.ui.components.base.PreviewFilterButtonListSingleDark","location":"ui/dev.mcarr.neds.ui.components.base/-preview-filter-button-list-single-dark.html","searchKeys":["PreviewFilterButtonListSingleDark","fun PreviewFilterButtonListSingleDark()","dev.mcarr.neds.ui.components.base.PreviewFilterButtonListSingleDark"]},{"name":"fun PreviewFilterButtonListSingleLargeFont()","description":"dev.mcarr.neds.ui.components.base.PreviewFilterButtonListSingleLargeFont","location":"ui/dev.mcarr.neds.ui.components.base/-preview-filter-button-list-single-large-font.html","searchKeys":["PreviewFilterButtonListSingleLargeFont","fun PreviewFilterButtonListSingleLargeFont()","dev.mcarr.neds.ui.components.base.PreviewFilterButtonListSingleLargeFont"]},{"name":"fun PreviewNextToGoFailed()","description":"dev.mcarr.neds.ui.screens.PreviewNextToGoFailed","location":"ui/dev.mcarr.neds.ui.screens/-preview-next-to-go-failed.html","searchKeys":["PreviewNextToGoFailed","fun PreviewNextToGoFailed()","dev.mcarr.neds.ui.screens.PreviewNextToGoFailed"]},{"name":"fun PreviewNextToGoInProgress()","description":"dev.mcarr.neds.ui.screens.PreviewNextToGoInProgress","location":"ui/dev.mcarr.neds.ui.screens/-preview-next-to-go-in-progress.html","searchKeys":["PreviewNextToGoInProgress","fun PreviewNextToGoInProgress()","dev.mcarr.neds.ui.screens.PreviewNextToGoInProgress"]},{"name":"fun PreviewNextToGoScreen()","description":"dev.mcarr.neds.ui.screens.PreviewNextToGoScreen","location":"ui/dev.mcarr.neds.ui.screens/-preview-next-to-go-screen.html","searchKeys":["PreviewNextToGoScreen","fun PreviewNextToGoScreen()","dev.mcarr.neds.ui.screens.PreviewNextToGoScreen"]},{"name":"fun PreviewNextToGoScreenLargeFont()","description":"dev.mcarr.neds.ui.screens.PreviewNextToGoScreenLargeFont","location":"ui/dev.mcarr.neds.ui.screens/-preview-next-to-go-screen-large-font.html","searchKeys":["PreviewNextToGoScreenLargeFont","fun PreviewNextToGoScreenLargeFont()","dev.mcarr.neds.ui.screens.PreviewNextToGoScreenLargeFont"]},{"name":"fun PreviewRaceCardList()","description":"dev.mcarr.neds.ui.components.racing.PreviewRaceCardList","location":"ui/dev.mcarr.neds.ui.components.racing/-preview-race-card-list.html","searchKeys":["PreviewRaceCardList","fun PreviewRaceCardList()","dev.mcarr.neds.ui.components.racing.PreviewRaceCardList"]},{"name":"fun PreviewRaceCardListDark()","description":"dev.mcarr.neds.ui.components.racing.PreviewRaceCardListDark","location":"ui/dev.mcarr.neds.ui.components.racing/-preview-race-card-list-dark.html","searchKeys":["PreviewRaceCardListDark","fun PreviewRaceCardListDark()","dev.mcarr.neds.ui.components.racing.PreviewRaceCardListDark"]},{"name":"fun PreviewRaceCardListLargeFont()","description":"dev.mcarr.neds.ui.components.racing.PreviewRaceCardListLargeFont","location":"ui/dev.mcarr.neds.ui.components.racing/-preview-race-card-list-large-font.html","searchKeys":["PreviewRaceCardListLargeFont","fun PreviewRaceCardListLargeFont()","dev.mcarr.neds.ui.components.racing.PreviewRaceCardListLargeFont"]},{"name":"fun PreviewRaceCardLoadingMulti()","description":"dev.mcarr.neds.ui.components.racing.PreviewRaceCardLoadingMulti","location":"ui/dev.mcarr.neds.ui.components.racing/-preview-race-card-loading-multi.html","searchKeys":["PreviewRaceCardLoadingMulti","fun PreviewRaceCardLoadingMulti()","dev.mcarr.neds.ui.components.racing.PreviewRaceCardLoadingMulti"]},{"name":"fun PreviewRaceCardLoadingSingle()","description":"dev.mcarr.neds.ui.components.racing.PreviewRaceCardLoadingSingle","location":"ui/dev.mcarr.neds.ui.components.racing/-preview-race-card-loading-single.html","searchKeys":["PreviewRaceCardLoadingSingle","fun PreviewRaceCardLoadingSingle()","dev.mcarr.neds.ui.components.racing.PreviewRaceCardLoadingSingle"]},{"name":"fun PreviewRaceCardLoadingSingleDark()","description":"dev.mcarr.neds.ui.components.racing.PreviewRaceCardLoadingSingleDark","location":"ui/dev.mcarr.neds.ui.components.racing/-preview-race-card-loading-single-dark.html","searchKeys":["PreviewRaceCardLoadingSingleDark","fun PreviewRaceCardLoadingSingleDark()","dev.mcarr.neds.ui.components.racing.PreviewRaceCardLoadingSingleDark"]},{"name":"fun PreviewRaceCardLoadingSingleLargeFont()","description":"dev.mcarr.neds.ui.components.racing.PreviewRaceCardLoadingSingleLargeFont","location":"ui/dev.mcarr.neds.ui.components.racing/-preview-race-card-loading-single-large-font.html","searchKeys":["PreviewRaceCardLoadingSingleLargeFont","fun PreviewRaceCardLoadingSingleLargeFont()","dev.mcarr.neds.ui.components.racing.PreviewRaceCardLoadingSingleLargeFont"]},{"name":"fun PreviewRaceCardMulti()","description":"dev.mcarr.neds.ui.components.racing.PreviewRaceCardMulti","location":"ui/dev.mcarr.neds.ui.components.racing/-preview-race-card-multi.html","searchKeys":["PreviewRaceCardMulti","fun PreviewRaceCardMulti()","dev.mcarr.neds.ui.components.racing.PreviewRaceCardMulti"]},{"name":"fun PreviewRaceCardSingle()","description":"dev.mcarr.neds.ui.components.racing.PreviewRaceCardSingle","location":"ui/dev.mcarr.neds.ui.components.racing/-preview-race-card-single.html","searchKeys":["PreviewRaceCardSingle","fun PreviewRaceCardSingle()","dev.mcarr.neds.ui.components.racing.PreviewRaceCardSingle"]},{"name":"fun PreviewRaceCardSingleDark()","description":"dev.mcarr.neds.ui.components.racing.PreviewRaceCardSingleDark","location":"ui/dev.mcarr.neds.ui.components.racing/-preview-race-card-single-dark.html","searchKeys":["PreviewRaceCardSingleDark","fun PreviewRaceCardSingleDark()","dev.mcarr.neds.ui.components.racing.PreviewRaceCardSingleDark"]},{"name":"fun PreviewRaceCardSingleLargeFont()","description":"dev.mcarr.neds.ui.components.racing.PreviewRaceCardSingleLargeFont","location":"ui/dev.mcarr.neds.ui.components.racing/-preview-race-card-single-large-font.html","searchKeys":["PreviewRaceCardSingleLargeFont","fun PreviewRaceCardSingleLargeFont()","dev.mcarr.neds.ui.components.racing.PreviewRaceCardSingleLargeFont"]},{"name":"fun PreviewRaceFilterButtonList()","description":"dev.mcarr.neds.ui.components.racing.PreviewRaceFilterButtonList","location":"ui/dev.mcarr.neds.ui.components.racing/-preview-race-filter-button-list.html","searchKeys":["PreviewRaceFilterButtonList","fun PreviewRaceFilterButtonList()","dev.mcarr.neds.ui.components.racing.PreviewRaceFilterButtonList"]},{"name":"fun PreviewRaceFilterButtonListDark()","description":"dev.mcarr.neds.ui.components.racing.PreviewRaceFilterButtonListDark","location":"ui/dev.mcarr.neds.ui.components.racing/-preview-race-filter-button-list-dark.html","searchKeys":["PreviewRaceFilterButtonListDark","fun PreviewRaceFilterButtonListDark()","dev.mcarr.neds.ui.components.racing.PreviewRaceFilterButtonListDark"]},{"name":"fun PreviewRaceFilterButtonListLargeFont()","description":"dev.mcarr.neds.ui.components.racing.PreviewRaceFilterButtonListLargeFont","location":"ui/dev.mcarr.neds.ui.components.racing/-preview-race-filter-button-list-large-font.html","searchKeys":["PreviewRaceFilterButtonListLargeFont","fun PreviewRaceFilterButtonListLargeFont()","dev.mcarr.neds.ui.components.racing.PreviewRaceFilterButtonListLargeFont"]},{"name":"fun PreviewRaceFilterButtonListMulti()","description":"dev.mcarr.neds.ui.components.racing.PreviewRaceFilterButtonListMulti","location":"ui/dev.mcarr.neds.ui.components.racing/-preview-race-filter-button-list-multi.html","searchKeys":["PreviewRaceFilterButtonListMulti","fun PreviewRaceFilterButtonListMulti()","dev.mcarr.neds.ui.components.racing.PreviewRaceFilterButtonListMulti"]},{"name":"fun PreviewRaceFilterButtonListMultiDark()","description":"dev.mcarr.neds.ui.components.racing.PreviewRaceFilterButtonListMultiDark","location":"ui/dev.mcarr.neds.ui.components.racing/-preview-race-filter-button-list-multi-dark.html","searchKeys":["PreviewRaceFilterButtonListMultiDark","fun PreviewRaceFilterButtonListMultiDark()","dev.mcarr.neds.ui.components.racing.PreviewRaceFilterButtonListMultiDark"]},{"name":"fun RaceCard(summary: RaceCardData, onClick: () -> Unit = {})","description":"dev.mcarr.neds.ui.components.racing.RaceCard","location":"ui/dev.mcarr.neds.ui.components.racing/-race-card.html","searchKeys":["RaceCard","fun RaceCard(summary: RaceCardData, onClick: () -> Unit = {})","dev.mcarr.neds.ui.components.racing.RaceCard"]},{"name":"fun RaceCardList(numberToDisplay: Int, summaries: List<RaceCardData>)","description":"dev.mcarr.neds.ui.components.racing.RaceCardList","location":"ui/dev.mcarr.neds.ui.components.racing/-race-card-list.html","searchKeys":["RaceCardList","fun RaceCardList(numberToDisplay: Int, summaries: List<RaceCardData>)","dev.mcarr.neds.ui.components.racing.RaceCardList"]},{"name":"fun RaceCardLoading(onClick: () -> Unit = {})","description":"dev.mcarr.neds.ui.components.racing.RaceCardLoading","location":"ui/dev.mcarr.neds.ui.components.racing/-race-card-loading.html","searchKeys":["RaceCardLoading","fun RaceCardLoading(onClick: () -> Unit = {})","dev.mcarr.neds.ui.components.racing.RaceCardLoading"]},{"name":"fun RaceFilterButtonList(currentChoices: List<RacingCategory>, selectChoices: (List<RacingCategory>) -> Unit)","description":"dev.mcarr.neds.ui.components.racing.RaceFilterButtonList","location":"ui/dev.mcarr.neds.ui.components.racing/-race-filter-button-list.html","searchKeys":["RaceFilterButtonList","fun RaceFilterButtonList(currentChoices: List<RacingCategory>, selectChoices: (List<RacingCategory>) -> Unit)","dev.mcarr.neds.ui.components.racing.RaceFilterButtonList"]},{"name":"lateinit var source: GetRacingDataUseCase","description":"dev.mcarr.neds.ui.viewmodels.NextToGoViewModel.source","location":"ui/dev.mcarr.neds.ui.viewmodels/-next-to-go-view-model/source.html","searchKeys":["source","lateinit var source: GetRacingDataUseCase","dev.mcarr.neds.ui.viewmodels.NextToGoViewModel.source"]},{"name":"open override fun pause()","description":"dev.mcarr.neds.ui.viewmodels.NextToGoViewModel.pause","location":"ui/dev.mcarr.neds.ui.viewmodels/-next-to-go-view-model/pause.html","searchKeys":["pause","open override fun pause()","dev.mcarr.neds.ui.viewmodels.NextToGoViewModel.pause"]},{"name":"open override fun resetState()","description":"dev.mcarr.neds.ui.viewmodels.NextToGoViewModel.resetState","location":"ui/dev.mcarr.neds.ui.viewmodels/-next-to-go-view-model/reset-state.html","searchKeys":["resetState","open override fun resetState()","dev.mcarr.neds.ui.viewmodels.NextToGoViewModel.resetState"]},{"name":"open override fun setCategory(category: List<RacingCategory>)","description":"dev.mcarr.neds.ui.viewmodels.NextToGoViewModel.setCategory","location":"ui/dev.mcarr.neds.ui.viewmodels/-next-to-go-view-model/set-category.html","searchKeys":["setCategory","open override fun setCategory(category: List<RacingCategory>)","dev.mcarr.neds.ui.viewmodels.NextToGoViewModel.setCategory"]},{"name":"open override val exactNumberOfResultsToDisplay: Int = 5","description":"dev.mcarr.neds.ui.viewmodels.NextToGoViewModel.exactNumberOfResultsToDisplay","location":"ui/dev.mcarr.neds.ui.viewmodels/-next-to-go-view-model/exact-number-of-results-to-display.html","searchKeys":["exactNumberOfResultsToDisplay","open override val exactNumberOfResultsToDisplay: Int = 5","dev.mcarr.neds.ui.viewmodels.NextToGoViewModel.exactNumberOfResultsToDisplay"]},{"name":"open override val uiState: StateFlow<NextToGoScreenUiState>","description":"dev.mcarr.neds.ui.viewmodels.NextToGoViewModel.uiState","location":"ui/dev.mcarr.neds.ui.viewmodels/-next-to-go-view-model/ui-state.html","searchKeys":["uiState","open override val uiState: StateFlow<NextToGoScreenUiState>","dev.mcarr.neds.ui.viewmodels.NextToGoViewModel.uiState"]},{"name":"val Pink40: Color","description":"dev.mcarr.neds.ui.theme.Pink40","location":"ui/dev.mcarr.neds.ui.theme/-pink40.html","searchKeys":["Pink40","val Pink40: Color","dev.mcarr.neds.ui.theme.Pink40"]},{"name":"val Pink80: Color","description":"dev.mcarr.neds.ui.theme.Pink80","location":"ui/dev.mcarr.neds.ui.theme/-pink80.html","searchKeys":["Pink80","val Pink80: Color","dev.mcarr.neds.ui.theme.Pink80"]},{"name":"val Purple40: Color","description":"dev.mcarr.neds.ui.theme.Purple40","location":"ui/dev.mcarr.neds.ui.theme/-purple40.html","searchKeys":["Purple40","val Purple40: Color","dev.mcarr.neds.ui.theme.Purple40"]},{"name":"val Purple80: Color","description":"dev.mcarr.neds.ui.theme.Purple80","location":"ui/dev.mcarr.neds.ui.theme/-purple80.html","searchKeys":["Purple80","val Purple80: Color","dev.mcarr.neds.ui.theme.Purple80"]},{"name":"val PurpleGrey40: Color","description":"dev.mcarr.neds.ui.theme.PurpleGrey40","location":"ui/dev.mcarr.neds.ui.theme/-purple-grey40.html","searchKeys":["PurpleGrey40","val PurpleGrey40: Color","dev.mcarr.neds.ui.theme.PurpleGrey40"]},{"name":"val PurpleGrey80: Color","description":"dev.mcarr.neds.ui.theme.PurpleGrey80","location":"ui/dev.mcarr.neds.ui.theme/-purple-grey80.html","searchKeys":["PurpleGrey80","val PurpleGrey80: Color","dev.mcarr.neds.ui.theme.PurpleGrey80"]},{"name":"val Typography: Typography","description":"dev.mcarr.neds.ui.theme.Typography","location":"ui/dev.mcarr.neds.ui.theme/-typography.html","searchKeys":["Typography","val Typography: Typography","dev.mcarr.neds.ui.theme.Typography"]},{"name":"var categories: MutableStateFlow<List<RacingCategory>>","description":"dev.mcarr.neds.ui.viewmodels.NextToGoViewModel.categories","location":"ui/dev.mcarr.neds.ui.viewmodels/-next-to-go-view-model/categories.html","searchKeys":["categories","var categories: MutableStateFlow<List<RacingCategory>>","dev.mcarr.neds.ui.viewmodels.NextToGoViewModel.categories"]},{"name":"class GetRacingDataUseCase(repo: RacingRepository)","description":"dev.mcarr.neds.domain.racing.GetRacingDataUseCase","location":"domain/dev.mcarr.neds.domain.racing/-get-racing-data-use-case/index.html","searchKeys":["GetRacingDataUseCase","class GetRacingDataUseCase(repo: RacingRepository)","dev.mcarr.neds.domain.racing.GetRacingDataUseCase"]},{"name":"constructor(repo: RacingRepository)","description":"dev.mcarr.neds.domain.racing.GetRacingDataUseCase.GetRacingDataUseCase","location":"domain/dev.mcarr.neds.domain.racing/-get-racing-data-use-case/-get-racing-data-use-case.html","searchKeys":["GetRacingDataUseCase","constructor(repo: RacingRepository)","dev.mcarr.neds.domain.racing.GetRacingDataUseCase.GetRacingDataUseCase"]},{"name":"suspend fun getMoreRaces(count: Int)","description":"dev.mcarr.neds.domain.racing.GetRacingDataUseCase.getMoreRaces","location":"domain/dev.mcarr.neds.domain.racing/-get-racing-data-use-case/get-more-races.html","searchKeys":["getMoreRaces","suspend fun getMoreRaces(count: Int)","dev.mcarr.neds.domain.racing.GetRacingDataUseCase.getMoreRaces"]},{"name":"val lastOutcome: MutableStateFlow<RacingUseCaseOutcome>","description":"dev.mcarr.neds.domain.racing.GetRacingDataUseCase.lastOutcome","location":"domain/dev.mcarr.neds.domain.racing/-get-racing-data-use-case/last-outcome.html","searchKeys":["lastOutcome","val lastOutcome: MutableStateFlow<RacingUseCaseOutcome>","dev.mcarr.neds.domain.racing.GetRacingDataUseCase.lastOutcome"]},{"name":"var cachedRaces: MutableStateFlow<List<RaceSummary>>","description":"dev.mcarr.neds.domain.racing.GetRacingDataUseCase.cachedRaces","location":"domain/dev.mcarr.neds.domain.racing/-get-racing-data-use-case/cached-races.html","searchKeys":["cachedRaces","var cachedRaces: MutableStateFlow<List<RaceSummary>>","dev.mcarr.neds.domain.racing.GetRacingDataUseCase.cachedRaces"]},{"name":"class FakeNextToGoViewModel(val exactNumberOfResultsToDisplay: Int, state: NextToGoScreenUiState) : INextToGoViewModel","description":"dev.mcarr.neds.mock.ui.viewmodels.FakeNextToGoViewModel","location":"mock/dev.mcarr.neds.mock.ui.viewmodels/-fake-next-to-go-view-model/index.html","searchKeys":["FakeNextToGoViewModel","class FakeNextToGoViewModel(val exactNumberOfResultsToDisplay: Int, state: NextToGoScreenUiState) : INextToGoViewModel","dev.mcarr.neds.mock.ui.viewmodels.FakeNextToGoViewModel"]},{"name":"class FakeRacingDataSource : IRacingDataSource","description":"dev.mcarr.neds.mock.data.datasources.FakeRacingDataSource","location":"mock/dev.mcarr.neds.mock.data.datasources/-fake-racing-data-source/index.html","searchKeys":["FakeRacingDataSource","class FakeRacingDataSource : IRacingDataSource","dev.mcarr.neds.mock.data.datasources.FakeRacingDataSource"]},{"name":"constructor()","description":"dev.mcarr.neds.mock.data.datasources.FakeRacingDataSource.FakeRacingDataSource","location":"mock/dev.mcarr.neds.mock.data.datasources/-fake-racing-data-source/-fake-racing-data-source.html","searchKeys":["FakeRacingDataSource","constructor()","dev.mcarr.neds.mock.data.datasources.FakeRacingDataSource.FakeRacingDataSource"]},{"name":"constructor(exactNumberOfResultsToDisplay: Int, state: NextToGoScreenUiState)","description":"dev.mcarr.neds.mock.ui.viewmodels.FakeNextToGoViewModel.FakeNextToGoViewModel","location":"mock/dev.mcarr.neds.mock.ui.viewmodels/-fake-next-to-go-view-model/-fake-next-to-go-view-model.html","searchKeys":["FakeNextToGoViewModel","constructor(exactNumberOfResultsToDisplay: Int, state: NextToGoScreenUiState)","dev.mcarr.neds.mock.ui.viewmodels.FakeNextToGoViewModel.FakeNextToGoViewModel"]},{"name":"fun fakeRace1(): RaceSummary","description":"dev.mcarr.neds.mock.data.datasources.fakeRace1","location":"mock/dev.mcarr.neds.mock.data.datasources/fake-race1.html","searchKeys":["fakeRace1","fun fakeRace1(): RaceSummary","dev.mcarr.neds.mock.data.datasources.fakeRace1"]},{"name":"fun fakeRace10(): RaceSummary","description":"dev.mcarr.neds.mock.data.datasources.fakeRace10","location":"mock/dev.mcarr.neds.mock.data.datasources/fake-race10.html","searchKeys":["fakeRace10","fun fakeRace10(): RaceSummary","dev.mcarr.neds.mock.data.datasources.fakeRace10"]},{"name":"fun fakeRace11(): RaceSummary","description":"dev.mcarr.neds.mock.data.datasources.fakeRace11","location":"mock/dev.mcarr.neds.mock.data.datasources/fake-race11.html","searchKeys":["fakeRace11","fun fakeRace11(): RaceSummary","dev.mcarr.neds.mock.data.datasources.fakeRace11"]},{"name":"fun fakeRace12(): RaceSummary","description":"dev.mcarr.neds.mock.data.datasources.fakeRace12","location":"mock/dev.mcarr.neds.mock.data.datasources/fake-race12.html","searchKeys":["fakeRace12","fun fakeRace12(): RaceSummary","dev.mcarr.neds.mock.data.datasources.fakeRace12"]},{"name":"fun fakeRace13(): RaceSummary","description":"dev.mcarr.neds.mock.data.datasources.fakeRace13","location":"mock/dev.mcarr.neds.mock.data.datasources/fake-race13.html","searchKeys":["fakeRace13","fun fakeRace13(): RaceSummary","dev.mcarr.neds.mock.data.datasources.fakeRace13"]},{"name":"fun fakeRace14(): RaceSummary","description":"dev.mcarr.neds.mock.data.datasources.fakeRace14","location":"mock/dev.mcarr.neds.mock.data.datasources/fake-race14.html","searchKeys":["fakeRace14","fun fakeRace14(): RaceSummary","dev.mcarr.neds.mock.data.datasources.fakeRace14"]},{"name":"fun fakeRace15(): RaceSummary","description":"dev.mcarr.neds.mock.data.datasources.fakeRace15","location":"mock/dev.mcarr.neds.mock.data.datasources/fake-race15.html","searchKeys":["fakeRace15","fun fakeRace15(): RaceSummary","dev.mcarr.neds.mock.data.datasources.fakeRace15"]},{"name":"fun fakeRace16(): RaceSummary","description":"dev.mcarr.neds.mock.data.datasources.fakeRace16","location":"mock/dev.mcarr.neds.mock.data.datasources/fake-race16.html","searchKeys":["fakeRace16","fun fakeRace16(): RaceSummary","dev.mcarr.neds.mock.data.datasources.fakeRace16"]},{"name":"fun fakeRace17(): RaceSummary","description":"dev.mcarr.neds.mock.data.datasources.fakeRace17","location":"mock/dev.mcarr.neds.mock.data.datasources/fake-race17.html","searchKeys":["fakeRace17","fun fakeRace17(): RaceSummary","dev.mcarr.neds.mock.data.datasources.fakeRace17"]},{"name":"fun fakeRace18(): RaceSummary","description":"dev.mcarr.neds.mock.data.datasources.fakeRace18","location":"mock/dev.mcarr.neds.mock.data.datasources/fake-race18.html","searchKeys":["fakeRace18","fun fakeRace18(): RaceSummary","dev.mcarr.neds.mock.data.datasources.fakeRace18"]},{"name":"fun fakeRace19(): RaceSummary","description":"dev.mcarr.neds.mock.data.datasources.fakeRace19","location":"mock/dev.mcarr.neds.mock.data.datasources/fake-race19.html","searchKeys":["fakeRace19","fun fakeRace19(): RaceSummary","dev.mcarr.neds.mock.data.datasources.fakeRace19"]},{"name":"fun fakeRace2(): RaceSummary","description":"dev.mcarr.neds.mock.data.datasources.fakeRace2","location":"mock/dev.mcarr.neds.mock.data.datasources/fake-race2.html","searchKeys":["fakeRace2","fun fakeRace2(): RaceSummary","dev.mcarr.neds.mock.data.datasources.fakeRace2"]},{"name":"fun fakeRace20(): RaceSummary","description":"dev.mcarr.neds.mock.data.datasources.fakeRace20","location":"mock/dev.mcarr.neds.mock.data.datasources/fake-race20.html","searchKeys":["fakeRace20","fun fakeRace20(): RaceSummary","dev.mcarr.neds.mock.data.datasources.fakeRace20"]},{"name":"fun fakeRace21(): RaceSummary","description":"dev.mcarr.neds.mock.data.datasources.fakeRace21","location":"mock/dev.mcarr.neds.mock.data.datasources/fake-race21.html","searchKeys":["fakeRace21","fun fakeRace21(): RaceSummary","dev.mcarr.neds.mock.data.datasources.fakeRace21"]},{"name":"fun fakeRace22(): RaceSummary","description":"dev.mcarr.neds.mock.data.datasources.fakeRace22","location":"mock/dev.mcarr.neds.mock.data.datasources/fake-race22.html","searchKeys":["fakeRace22","fun fakeRace22(): RaceSummary","dev.mcarr.neds.mock.data.datasources.fakeRace22"]},{"name":"fun fakeRace23(): RaceSummary","description":"dev.mcarr.neds.mock.data.datasources.fakeRace23","location":"mock/dev.mcarr.neds.mock.data.datasources/fake-race23.html","searchKeys":["fakeRace23","fun fakeRace23(): RaceSummary","dev.mcarr.neds.mock.data.datasources.fakeRace23"]},{"name":"fun fakeRace24(): RaceSummary","description":"dev.mcarr.neds.mock.data.datasources.fakeRace24","location":"mock/dev.mcarr.neds.mock.data.datasources/fake-race24.html","searchKeys":["fakeRace24","fun fakeRace24(): RaceSummary","dev.mcarr.neds.mock.data.datasources.fakeRace24"]},{"name":"fun fakeRace25(): RaceSummary","description":"dev.mcarr.neds.mock.data.datasources.fakeRace25","location":"mock/dev.mcarr.neds.mock.data.datasources/fake-race25.html","searchKeys":["fakeRace25","fun fakeRace25(): RaceSummary","dev.mcarr.neds.mock.data.datasources.fakeRace25"]},{"name":"fun fakeRace26(): RaceSummary","description":"dev.mcarr.neds.mock.data.datasources.fakeRace26","location":"mock/dev.mcarr.neds.mock.data.datasources/fake-race26.html","searchKeys":["fakeRace26","fun fakeRace26(): RaceSummary","dev.mcarr.neds.mock.data.datasources.fakeRace26"]},{"name":"fun fakeRace27(): RaceSummary","description":"dev.mcarr.neds.mock.data.datasources.fakeRace27","location":"mock/dev.mcarr.neds.mock.data.datasources/fake-race27.html","searchKeys":["fakeRace27","fun fakeRace27(): RaceSummary","dev.mcarr.neds.mock.data.datasources.fakeRace27"]},{"name":"fun fakeRace28(): RaceSummary","description":"dev.mcarr.neds.mock.data.datasources.fakeRace28","location":"mock/dev.mcarr.neds.mock.data.datasources/fake-race28.html","searchKeys":["fakeRace28","fun fakeRace28(): RaceSummary","dev.mcarr.neds.mock.data.datasources.fakeRace28"]},{"name":"fun fakeRace29(): RaceSummary","description":"dev.mcarr.neds.mock.data.datasources.fakeRace29","location":"mock/dev.mcarr.neds.mock.data.datasources/fake-race29.html","searchKeys":["fakeRace29","fun fakeRace29(): RaceSummary","dev.mcarr.neds.mock.data.datasources.fakeRace29"]},{"name":"fun fakeRace3(): RaceSummary","description":"dev.mcarr.neds.mock.data.datasources.fakeRace3","location":"mock/dev.mcarr.neds.mock.data.datasources/fake-race3.html","searchKeys":["fakeRace3","fun fakeRace3(): RaceSummary","dev.mcarr.neds.mock.data.datasources.fakeRace3"]},{"name":"fun fakeRace30(): RaceSummary","description":"dev.mcarr.neds.mock.data.datasources.fakeRace30","location":"mock/dev.mcarr.neds.mock.data.datasources/fake-race30.html","searchKeys":["fakeRace30","fun fakeRace30(): RaceSummary","dev.mcarr.neds.mock.data.datasources.fakeRace30"]},{"name":"fun fakeRace4(): RaceSummary","description":"dev.mcarr.neds.mock.data.datasources.fakeRace4","location":"mock/dev.mcarr.neds.mock.data.datasources/fake-race4.html","searchKeys":["fakeRace4","fun fakeRace4(): RaceSummary","dev.mcarr.neds.mock.data.datasources.fakeRace4"]},{"name":"fun fakeRace5(): RaceSummary","description":"dev.mcarr.neds.mock.data.datasources.fakeRace5","location":"mock/dev.mcarr.neds.mock.data.datasources/fake-race5.html","searchKeys":["fakeRace5","fun fakeRace5(): RaceSummary","dev.mcarr.neds.mock.data.datasources.fakeRace5"]},{"name":"fun fakeRace6(): RaceSummary","description":"dev.mcarr.neds.mock.data.datasources.fakeRace6","location":"mock/dev.mcarr.neds.mock.data.datasources/fake-race6.html","searchKeys":["fakeRace6","fun fakeRace6(): RaceSummary","dev.mcarr.neds.mock.data.datasources.fakeRace6"]},{"name":"fun fakeRace7(): RaceSummary","description":"dev.mcarr.neds.mock.data.datasources.fakeRace7","location":"mock/dev.mcarr.neds.mock.data.datasources/fake-race7.html","searchKeys":["fakeRace7","fun fakeRace7(): RaceSummary","dev.mcarr.neds.mock.data.datasources.fakeRace7"]},{"name":"fun fakeRace8(): RaceSummary","description":"dev.mcarr.neds.mock.data.datasources.fakeRace8","location":"mock/dev.mcarr.neds.mock.data.datasources/fake-race8.html","searchKeys":["fakeRace8","fun fakeRace8(): RaceSummary","dev.mcarr.neds.mock.data.datasources.fakeRace8"]},{"name":"fun fakeRace9(): RaceSummary","description":"dev.mcarr.neds.mock.data.datasources.fakeRace9","location":"mock/dev.mcarr.neds.mock.data.datasources/fake-race9.html","searchKeys":["fakeRace9","fun fakeRace9(): RaceSummary","dev.mcarr.neds.mock.data.datasources.fakeRace9"]},{"name":"fun getRaceSummaries(updateStartTimes: Boolean = true, expiredRaces: Int = 2): List<RaceSummary>","description":"dev.mcarr.neds.mock.data.datasources.FakeRacingDataSource.getRaceSummaries","location":"mock/dev.mcarr.neds.mock.data.datasources/-fake-racing-data-source/get-race-summaries.html","searchKeys":["getRaceSummaries","fun getRaceSummaries(updateStartTimes: Boolean = true, expiredRaces: Int = 2): List<RaceSummary>","dev.mcarr.neds.mock.data.datasources.FakeRacingDataSource.getRaceSummaries"]},{"name":"fun getRaceSummary(updateStartTime: Boolean = true, offset: Int = 30): RaceSummary","description":"dev.mcarr.neds.mock.data.datasources.FakeRacingDataSource.getRaceSummary","location":"mock/dev.mcarr.neds.mock.data.datasources/-fake-racing-data-source/get-race-summary.html","searchKeys":["getRaceSummary","fun getRaceSummary(updateStartTime: Boolean = true, offset: Int = 30): RaceSummary","dev.mcarr.neds.mock.data.datasources.FakeRacingDataSource.getRaceSummary"]},{"name":"open override fun pause()","description":"dev.mcarr.neds.mock.ui.viewmodels.FakeNextToGoViewModel.pause","location":"mock/dev.mcarr.neds.mock.ui.viewmodels/-fake-next-to-go-view-model/pause.html","searchKeys":["pause","open override fun pause()","dev.mcarr.neds.mock.ui.viewmodels.FakeNextToGoViewModel.pause"]},{"name":"open override fun resetState()","description":"dev.mcarr.neds.mock.ui.viewmodels.FakeNextToGoViewModel.resetState","location":"mock/dev.mcarr.neds.mock.ui.viewmodels/-fake-next-to-go-view-model/reset-state.html","searchKeys":["resetState","open override fun resetState()","dev.mcarr.neds.mock.ui.viewmodels.FakeNextToGoViewModel.resetState"]},{"name":"open override fun setCategory(category: List<RacingCategory>)","description":"dev.mcarr.neds.mock.ui.viewmodels.FakeNextToGoViewModel.setCategory","location":"mock/dev.mcarr.neds.mock.ui.viewmodels/-fake-next-to-go-view-model/set-category.html","searchKeys":["setCategory","open override fun setCategory(category: List<RacingCategory>)","dev.mcarr.neds.mock.ui.viewmodels.FakeNextToGoViewModel.setCategory"]},{"name":"open override val exactNumberOfResultsToDisplay: Int","description":"dev.mcarr.neds.mock.ui.viewmodels.FakeNextToGoViewModel.exactNumberOfResultsToDisplay","location":"mock/dev.mcarr.neds.mock.ui.viewmodels/-fake-next-to-go-view-model/exact-number-of-results-to-display.html","searchKeys":["exactNumberOfResultsToDisplay","open override val exactNumberOfResultsToDisplay: Int","dev.mcarr.neds.mock.ui.viewmodels.FakeNextToGoViewModel.exactNumberOfResultsToDisplay"]},{"name":"open override val uiState: MutableStateFlow<NextToGoScreenUiState>","description":"dev.mcarr.neds.mock.ui.viewmodels.FakeNextToGoViewModel.uiState","location":"mock/dev.mcarr.neds.mock.ui.viewmodels/-fake-next-to-go-view-model/ui-state.html","searchKeys":["uiState","open override val uiState: MutableStateFlow<NextToGoScreenUiState>","dev.mcarr.neds.mock.ui.viewmodels.FakeNextToGoViewModel.uiState"]},{"name":"open suspend override fun getNextRace(count: Int): RacingNetworkResponse","description":"dev.mcarr.neds.mock.data.datasources.FakeRacingDataSource.getNextRace","location":"mock/dev.mcarr.neds.mock.data.datasources/-fake-racing-data-source/get-next-race.html","searchKeys":["getNextRace","open suspend override fun getNextRace(count: Int): RacingNetworkResponse","dev.mcarr.neds.mock.data.datasources.FakeRacingDataSource.getNextRace"]},{"name":"class Builder","description":"dev.mcarr.neds.net.uri.NedsUri.Builder","location":"net/dev.mcarr.neds.net.uri/-neds-uri/-builder/index.html","searchKeys":["Builder","class Builder","dev.mcarr.neds.net.uri.NedsUri.Builder"]},{"name":"class NedsUri","description":"dev.mcarr.neds.net.uri.NedsUri","location":"net/dev.mcarr.neds.net.uri/-neds-uri/index.html","searchKeys":["NedsUri","class NedsUri","dev.mcarr.neds.net.uri.NedsUri"]},{"name":"constructor()","description":"dev.mcarr.neds.net.uri.NedsUri.Builder.Builder","location":"net/dev.mcarr.neds.net.uri/-neds-uri/-builder/-builder.html","searchKeys":["Builder","constructor()","dev.mcarr.neds.net.uri.NedsUri.Builder.Builder"]},{"name":"fun build(): NedsUri","description":"dev.mcarr.neds.net.uri.NedsUri.Builder.build","location":"net/dev.mcarr.neds.net.uri/-neds-uri/-builder/build.html","searchKeys":["build","fun build(): NedsUri","dev.mcarr.neds.net.uri.NedsUri.Builder.build"]},{"name":"fun setApiType(apiType: ApiType): NedsUri.Builder","description":"dev.mcarr.neds.net.uri.NedsUri.Builder.setApiType","location":"net/dev.mcarr.neds.net.uri/-neds-uri/-builder/set-api-type.html","searchKeys":["setApiType","fun setApiType(apiType: ApiType): NedsUri.Builder","dev.mcarr.neds.net.uri.NedsUri.Builder.setApiType"]},{"name":"fun setCount(count: Int): NedsUri.Builder","description":"dev.mcarr.neds.net.uri.NedsUri.Builder.setCount","location":"net/dev.mcarr.neds.net.uri/-neds-uri/-builder/set-count.html","searchKeys":["setCount","fun setCount(count: Int): NedsUri.Builder","dev.mcarr.neds.net.uri.NedsUri.Builder.setCount"]},{"name":"fun setEventType(eventType: EventType): NedsUri.Builder","description":"dev.mcarr.neds.net.uri.NedsUri.Builder.setEventType","location":"net/dev.mcarr.neds.net.uri/-neds-uri/-builder/set-event-type.html","searchKeys":["setEventType","fun setEventType(eventType: EventType): NedsUri.Builder","dev.mcarr.neds.net.uri.NedsUri.Builder.setEventType"]},{"name":"fun setHost(host: ApiHost): NedsUri.Builder","description":"dev.mcarr.neds.net.uri.NedsUri.Builder.setHost","location":"net/dev.mcarr.neds.net.uri/-neds-uri/-builder/set-host.html","searchKeys":["setHost","fun setHost(host: ApiHost): NedsUri.Builder","dev.mcarr.neds.net.uri.NedsUri.Builder.setHost"]},{"name":"fun setMethod(method: String): NedsUri.Builder","description":"dev.mcarr.neds.net.uri.NedsUri.Builder.setMethod","location":"net/dev.mcarr.neds.net.uri/-neds-uri/-builder/set-method.html","searchKeys":["setMethod","fun setMethod(method: String): NedsUri.Builder","dev.mcarr.neds.net.uri.NedsUri.Builder.setMethod"]},{"name":"fun setScheme(scheme: HttpScheme): NedsUri.Builder","description":"dev.mcarr.neds.net.uri.NedsUri.Builder.setScheme","location":"net/dev.mcarr.neds.net.uri/-neds-uri/-builder/set-scheme.html","searchKeys":["setScheme","fun setScheme(scheme: HttpScheme): NedsUri.Builder","dev.mcarr.neds.net.uri.NedsUri.Builder.setScheme"]},{"name":"fun setVersion(version: ApiVersion): NedsUri.Builder","description":"dev.mcarr.neds.net.uri.NedsUri.Builder.setVersion","location":"net/dev.mcarr.neds.net.uri/-neds-uri/-builder/set-version.html","searchKeys":["setVersion","fun setVersion(version: ApiVersion): NedsUri.Builder","dev.mcarr.neds.net.uri.NedsUri.Builder.setVersion"]},{"name":"object KtorClient","description":"dev.mcarr.neds.net.client.KtorClient","location":"net/dev.mcarr.neds.net.client/-ktor-client/index.html","searchKeys":["KtorClient","object KtorClient","dev.mcarr.neds.net.client.KtorClient"]},{"name":"open override fun toString(): String","description":"dev.mcarr.neds.net.uri.NedsUri.toString","location":"net/dev.mcarr.neds.net.uri/-neds-uri/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.mcarr.neds.net.uri.NedsUri.toString"]},{"name":"suspend fun get(nedsUri: NedsUri): HttpResponse","description":"dev.mcarr.neds.net.client.KtorClient.get","location":"net/dev.mcarr.neds.net.client/-ktor-client/get.html","searchKeys":["get","suspend fun get(nedsUri: NedsUri): HttpResponse","dev.mcarr.neds.net.client.KtorClient.get"]}]